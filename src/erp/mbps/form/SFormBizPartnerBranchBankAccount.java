/*
 * SFormBizPartnerBranchBankAccount.java
 *
 * Created on 25/09/2009, 04:31:46 PM
 */
package erp.mbps.form;

import erp.data.SDataConstants;
import erp.data.SDataConstantsSys;
import erp.data.SDataUtilities;
import erp.lib.SLibConstants;
import erp.lib.SLibUtilities;
import erp.lib.form.SFormComboBoxGroup;
import erp.lib.form.SFormComponentItem;
import erp.lib.form.SFormField;
import erp.lib.form.SFormUtilities;
import erp.lib.form.SFormValidation;
import erp.lib.table.STableColumnForm;
import erp.lib.table.STableConstants;
import erp.lib.table.STablePane;
import erp.lib.table.STableRow;
import erp.mbps.data.SDataBizPartner;
import erp.mbps.data.SDataBizPartnerBranchBankAccount;
import erp.mbps.data.SDataBizPartnerBranchBankAccountCard;
import erp.mbps.data.SDataBizPartnerBranchBankAccountCardRow;
import erp.mbps.data.SDataBizPartnerBranchBankAccountLayoutBank;
import erp.mbps.data.SDataBizPartnerBranchBankAccountLayoutRow;
import erp.mcfg.data.SDataCurrency;
import erp.mod.bps.db.SBpsUtils;
import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ItemEvent;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.AbstractAction;

/**
 *
 * @author Alfonso Flores
 */
public class SFormBizPartnerBranchBankAccount extends javax.swing.JDialog implements erp.lib.form.SFormInterface, java.awt.event.ActionListener {

    private int mnFormType;
    private int mnFormResult;
    private int mnFormStatus;
    private boolean mbFirstTime;
    private boolean mbResetingForm;
    private java.util.Vector<erp.lib.form.SFormField> mvFields;
    private erp.client.SClientInterface miClient;

    private erp.mbps.data.SDataBizPartner moBizPartnerCategory;
    private erp.mbps.data.SDataBizPartnerBranchBankAccount moBizPartnerBranchBankAccount;
    private erp.lib.form.SFormComboBoxGroup moComboBoxGroupBizPartnerBranch;
    private erp.lib.form.SFormComboBoxGroup moComboBoxGroupCategoryTypeCashAccount;
    private erp.lib.form.SFormField moFieldDbmsPkBizPartnerId;
    private erp.lib.form.SFormField moFieldPkBizPartnerBranchId;
    private erp.lib.form.SFormField moFieldFkAccountCashCategoryId;
    private erp.lib.form.SFormField moFieldFkAccountCashTypeId;
    private erp.lib.form.SFormField moFieldFkBankId;
    private erp.lib.form.SFormField moFieldFkCurrencyId;
    private erp.lib.form.SFormField moFieldBankAccount;
    private erp.lib.form.SFormField moFieldBankAccountBranchNumber;
    private erp.lib.form.SFormField moFieldBankAccountNumber;
    private erp.lib.form.SFormField moFieldBankAccountNumberStd;
    private erp.lib.form.SFormField moFieldAgree;
    private erp.lib.form.SFormField moFieldReference;
    private erp.lib.form.SFormField moFieldCode;
    private erp.lib.form.SFormField moFieldCodeAba;
    private erp.lib.form.SFormField moFieldCodeSwift;
    private erp.lib.form.SFormField moFieldAliasBajio;
    private erp.lib.form.SFormField moFieldFkCardIssuerId;
    private erp.lib.form.SFormField moFieldIsCardApplying;
    private erp.lib.form.SFormField moFieldIsDefault;
    private erp.lib.form.SFormField moFieldIsDeleted;

    private erp.lib.table.STablePane moBankAccountCardPane;
    private erp.lib.table.STablePane moBankAccountLayoutPane;
    private erp.lib.table.STablePane moNotesPane;

    private erp.mbps.form.SFormBizPartnerBranchBankAccountCard moFormBizPartnerBranchBankAccountCard;
    private boolean mbParamIsInMainWindow;
    private int mnParamBizPartnerType;
    private java.lang.String msParamBizPartnerDescription;
    private java.lang.String msParamBizPartnerBranchDescription;
    
    private java.lang.String msMsgError;

    /** Creates new form SFormBizPartnerBranchBankAccount */
    public SFormBizPartnerBranchBankAccount(erp.client.SClientInterface client) {
        super(client.getFrame(), true);
        miClient =  client;

        mnFormType = SDataConstants.BPSU_BANK_ACC;

        initComponents();
        initComponentsExtra();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jbOk = new javax.swing.JButton();
        jbCancel = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jpBankAccountCard = new javax.swing.JPanel();
        jPanel18 = new javax.swing.JPanel();
        jbAddCard = new javax.swing.JButton();
        jbModifyCard = new javax.swing.JButton();
        jpBankAccountLayout = new javax.swing.JPanel();
        jPanel21 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jlDbmsFkBizPartnerId = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jbDbmsFkBizPartnerId = new javax.swing.JButton();
        jcbDbmsFkBizPartnerId = new javax.swing.JComboBox();
        jlPkBizPartnerBranchId = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jbPkBizPartnerBranchId = new javax.swing.JButton();
        jcbPkBizPartnerBranchId = new javax.swing.JComboBox();
        jlFkAccountCashCategoryId = new javax.swing.JLabel();
        jcbFkAccountCashCategoryId = new javax.swing.JComboBox();
        jlFkAccountCashTypeId = new javax.swing.JLabel();
        jcbFkAccountCashTypeId = new javax.swing.JComboBox();
        jlFkBankId = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jbFkBankId = new javax.swing.JButton();
        jcbFkBankId = new javax.swing.JComboBox();
        jlFkCurrencyId = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jbFkCurrencyId = new javax.swing.JButton();
        jcbFkCurrencyId = new javax.swing.JComboBox();
        jlBankAccount = new javax.swing.JLabel();
        jtfBankAccount = new javax.swing.JTextField();
        jckIsCardAppliyng = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jlFkCardIssuerId = new javax.swing.JLabel();
        jPanel19 = new javax.swing.JPanel();
        jbFkCardIssuerId = new javax.swing.JButton();
        jcbFkCardIssuerId = new javax.swing.JComboBox();
        jckIsDefault = new javax.swing.JCheckBox();
        jckIsDeleted = new javax.swing.JCheckBox();
        jPanel20 = new javax.swing.JPanel();
        jlBankAccountBranchNumber = new javax.swing.JLabel();
        jtfBankAccountBranchNumber = new javax.swing.JTextField();
        jlBankAccountNumber = new javax.swing.JLabel();
        jtfBankAccountNumber = new javax.swing.JTextField();
        jlFormatBankAccountNumber = new javax.swing.JLabel();
        jlFormatBankAccountNumberData = new javax.swing.JLabel();
        jlBankAccountNumberStd = new javax.swing.JLabel();
        jtfBankAccountNumberStd = new javax.swing.JTextField();
        jlFormatBankAccountNumberStd = new javax.swing.JLabel();
        jlFormatBankAccountNumberStdData = new javax.swing.JLabel();
        jlAgree = new javax.swing.JLabel();
        jtfAgree = new javax.swing.JTextField();
        jlReference = new javax.swing.JLabel();
        jtfReference = new javax.swing.JTextField();
        jlCodeAba = new javax.swing.JLabel();
        jtfCodeAba = new javax.swing.JTextField();
        jlCodeSwift = new javax.swing.JLabel();
        jtfCodeSwift = new javax.swing.JTextField();
        jlCode = new javax.swing.JLabel();
        jtfCode = new javax.swing.JTextField();
        jlAliasBajio = new javax.swing.JLabel();
        jtfAliasBajio = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cuenta bancaria");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel1.setPreferredSize(new java.awt.Dimension(592, 33));
        jPanel1.setLayout(new java.awt.FlowLayout(2));

        jbOk.setText("Aceptar");
        jbOk.setToolTipText("[Ctrl + Enter]");
        jbOk.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel1.add(jbOk);

        jbCancel.setText("Cancelar");
        jbCancel.setToolTipText("[Escape]");
        jPanel1.add(jbCancel);

        getContentPane().add(jPanel1, java.awt.BorderLayout.SOUTH);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del registro:"));
        jPanel2.setLayout(new java.awt.BorderLayout(0, 5));

        jPanel8.setLayout(new java.awt.GridLayout(1, 2));

        jpBankAccountCard.setBorder(javax.swing.BorderFactory.createTitledBorder("Informaci√≥n de las tarjetas:"));
        jpBankAccountCard.setPreferredSize(new java.awt.Dimension(100, 110));
        jpBankAccountCard.setLayout(new java.awt.BorderLayout());

        jPanel18.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel18.setLayout(new java.awt.FlowLayout(0, 1, 0));

        jbAddCard.setIcon(new javax.swing.ImageIcon(getClass().getResource("/erp/img/icon_std_new.gif"))); // NOI18N
        jbAddCard.setToolTipText("Crear [Ctrl+N]");
        jbAddCard.setPreferredSize(new java.awt.Dimension(23, 23));
        jPanel18.add(jbAddCard);

        jbModifyCard.setIcon(new javax.swing.ImageIcon(getClass().getResource("/erp/img/icon_std_edit.gif"))); // NOI18N
        jbModifyCard.setToolTipText("Modificar [Ctrl+M]");
        jbModifyCard.setPreferredSize(new java.awt.Dimension(23, 23));
        jPanel18.add(jbModifyCard);

        jpBankAccountCard.add(jPanel18, java.awt.BorderLayout.NORTH);

        jPanel8.add(jpBankAccountCard);

        jpBankAccountLayout.setBorder(javax.swing.BorderFactory.createTitledBorder("Layouts para pagos"));
        jpBankAccountLayout.setLayout(new java.awt.BorderLayout());

        jPanel21.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel21.setLayout(new java.awt.FlowLayout(0, 1, 0));
        jpBankAccountLayout.add(jPanel21, java.awt.BorderLayout.NORTH);

        jPanel8.add(jpBankAccountLayout);

        jPanel2.add(jPanel8, java.awt.BorderLayout.CENTER);

        jPanel17.setPreferredSize(new java.awt.Dimension(100, 320));
        jPanel17.setLayout(new java.awt.BorderLayout());

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Configuraci√≥n de la cuenta:"));
        jPanel3.setPreferredSize(new java.awt.Dimension(490, 100));
        jPanel3.setLayout(new java.awt.GridLayout(10, 2, 5, 5));

        jlDbmsFkBizPartnerId.setForeground(java.awt.Color.blue);
        jlDbmsFkBizPartnerId.setText("Asociado de negocios: *");
        jPanel3.add(jlDbmsFkBizPartnerId);

        jPanel4.setLayout(new java.awt.BorderLayout());

        jbDbmsFkBizPartnerId.setText("jButton1");
        jbDbmsFkBizPartnerId.setToolTipText("Seleccionar asociado de negocios");
        jbDbmsFkBizPartnerId.setFocusable(false);
        jbDbmsFkBizPartnerId.setPreferredSize(new java.awt.Dimension(23, 23));
        jPanel4.add(jbDbmsFkBizPartnerId, java.awt.BorderLayout.EAST);

        jcbDbmsFkBizPartnerId.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbDbmsFkBizPartnerId.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbDbmsFkBizPartnerIdItemStateChanged(evt);
            }
        });
        jcbDbmsFkBizPartnerId.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jcbDbmsFkBizPartnerIdFocusLost(evt);
            }
        });
        jPanel4.add(jcbDbmsFkBizPartnerId, java.awt.BorderLayout.CENTER);

        jPanel3.add(jPanel4);

        jlPkBizPartnerBranchId.setForeground(java.awt.Color.blue);
        jlPkBizPartnerBranchId.setText("Sucursal asociado: *");
        jPanel3.add(jlPkBizPartnerBranchId);

        jPanel5.setLayout(new java.awt.BorderLayout());

        jbPkBizPartnerBranchId.setText("jButton2");
        jbPkBizPartnerBranchId.setToolTipText("Seleccionar sucursal");
        jbPkBizPartnerBranchId.setFocusable(false);
        jbPkBizPartnerBranchId.setPreferredSize(new java.awt.Dimension(23, 23));
        jPanel5.add(jbPkBizPartnerBranchId, java.awt.BorderLayout.EAST);

        jcbPkBizPartnerBranchId.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel5.add(jcbPkBizPartnerBranchId, java.awt.BorderLayout.CENTER);

        jPanel3.add(jPanel5);

        jlFkAccountCashCategoryId.setText("Categor√≠a de cuenta de efectivo: *");
        jPanel3.add(jlFkAccountCashCategoryId);

        jcbFkAccountCashCategoryId.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel3.add(jcbFkAccountCashCategoryId);

        jlFkAccountCashTypeId.setText("Tipo de cuenta de efectivo: *");
        jPanel3.add(jlFkAccountCashTypeId);

        jcbFkAccountCashTypeId.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel3.add(jcbFkAccountCashTypeId);

        jlFkBankId.setText("Banco: *");
        jPanel3.add(jlFkBankId);

        jPanel6.setLayout(new java.awt.BorderLayout());

        jbFkBankId.setText("jButton3");
        jbFkBankId.setToolTipText("Seleccionar banco");
        jbFkBankId.setFocusable(false);
        jbFkBankId.setPreferredSize(new java.awt.Dimension(23, 23));
        jPanel6.add(jbFkBankId, java.awt.BorderLayout.EAST);

        jcbFkBankId.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel6.add(jcbFkBankId, java.awt.BorderLayout.CENTER);

        jPanel3.add(jPanel6);

        jlFkCurrencyId.setText("Moneda: *");
        jPanel3.add(jlFkCurrencyId);

        jPanel7.setLayout(new java.awt.BorderLayout());

        jbFkCurrencyId.setText("jButton4");
        jbFkCurrencyId.setToolTipText("Seleccionar moneda");
        jbFkCurrencyId.setFocusable(false);
        jbFkCurrencyId.setPreferredSize(new java.awt.Dimension(23, 23));
        jPanel7.add(jbFkCurrencyId, java.awt.BorderLayout.LINE_END);

        jcbFkCurrencyId.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel7.add(jcbFkCurrencyId, java.awt.BorderLayout.CENTER);

        jPanel3.add(jPanel7);

        jlBankAccount.setText("Nombre de la cuenta: *");
        jPanel3.add(jlBankAccount);

        jtfBankAccount.setText("NOM CTA");
        jPanel3.add(jtfBankAccount);

        jckIsCardAppliyng.setText("Aplica tarjeta");
        jckIsCardAppliyng.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jckIsCardAppliyngItemStateChanged(evt);
            }
        });
        jPanel3.add(jckIsCardAppliyng);
        jPanel3.add(jLabel1);

        jlFkCardIssuerId.setText("Emisor de tarjeta: ");
        jPanel3.add(jlFkCardIssuerId);

        jPanel19.setLayout(new java.awt.BorderLayout());

        jbFkCardIssuerId.setText("jButton5");
        jbFkCardIssuerId.setToolTipText("Seleccionar emisor de tarjeta");
        jbFkCardIssuerId.setFocusable(false);
        jbFkCardIssuerId.setPreferredSize(new java.awt.Dimension(23, 23));
        jPanel19.add(jbFkCardIssuerId, java.awt.BorderLayout.EAST);

        jcbFkCardIssuerId.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel19.add(jcbFkCardIssuerId, java.awt.BorderLayout.CENTER);

        jPanel3.add(jPanel19);

        jckIsDefault.setText("Cuenta por default");
        jPanel3.add(jckIsDefault);

        jckIsDeleted.setText("Registro eliminado");
        jPanel3.add(jckIsDeleted);

        jPanel17.add(jPanel3, java.awt.BorderLayout.WEST);

        jPanel20.setBorder(javax.swing.BorderFactory.createTitledBorder("Informaci√≥n de la cuenta:"));
        jPanel20.setPreferredSize(new java.awt.Dimension(300, 100));
        jPanel20.setLayout(new java.awt.GridLayout(11, 2, 5, 5));

        jlBankAccountBranchNumber.setText("N√∫mero de sucursal:");
        jlBankAccountBranchNumber.setPreferredSize(new java.awt.Dimension(150, 20));
        jPanel20.add(jlBankAccountBranchNumber);

        jtfBankAccountBranchNumber.setText("NUM SUC");
        jtfBankAccountBranchNumber.setPreferredSize(new java.awt.Dimension(175, 23));
        jPanel20.add(jtfBankAccountBranchNumber);

        jlBankAccountNumber.setText("N√∫mero de cuenta: *");
        jlBankAccountNumber.setPreferredSize(new java.awt.Dimension(150, 20));
        jPanel20.add(jlBankAccountNumber);

        jtfBankAccountNumber.setText("NUM CTA");
        jtfBankAccountNumber.setPreferredSize(new java.awt.Dimension(150, 23));
        jtfBankAccountNumber.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfBankAccountNumberFocusLost(evt);
            }
        });
        jPanel20.add(jtfBankAccountNumber);

        jlFormatBankAccountNumber.setPreferredSize(new java.awt.Dimension(150, 20));
        jPanel20.add(jlFormatBankAccountNumber);

        jlFormatBankAccountNumberData.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jlFormatBankAccountNumberData.setText("000 0000 0000");
        jlFormatBankAccountNumberData.setPreferredSize(new java.awt.Dimension(150, 20));
        jPanel20.add(jlFormatBankAccountNumberData);

        jlBankAccountNumberStd.setText("ClaBE:");
        jlBankAccountNumberStd.setPreferredSize(new java.awt.Dimension(150, 20));
        jPanel20.add(jlBankAccountNumberStd);

        jtfBankAccountNumberStd.setText("NUM STD");
        jtfBankAccountNumberStd.setPreferredSize(new java.awt.Dimension(150, 23));
        jtfBankAccountNumberStd.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfBankAccountNumberStdFocusLost(evt);
            }
        });
        jPanel20.add(jtfBankAccountNumberStd);

        jlFormatBankAccountNumberStd.setPreferredSize(new java.awt.Dimension(150, 20));
        jPanel20.add(jlFormatBankAccountNumberStd);

        jlFormatBankAccountNumberStdData.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jlFormatBankAccountNumberStdData.setText("000 000 000 0000 0000 0");
        jlFormatBankAccountNumberStdData.setPreferredSize(new java.awt.Dimension(150, 20));
        jPanel20.add(jlFormatBankAccountNumberStdData);

        jlAgree.setText("Convenio: ");
        jlAgree.setPreferredSize(new java.awt.Dimension(150, 20));
        jPanel20.add(jlAgree);

        jtfAgree.setText("CONVENIO");
        jtfAgree.setPreferredSize(new java.awt.Dimension(150, 23));
        jPanel20.add(jtfAgree);

        jlReference.setText("Referencia:");
        jlReference.setPreferredSize(new java.awt.Dimension(150, 20));
        jPanel20.add(jlReference);

        jtfReference.setText("REF");
        jtfReference.setPreferredSize(new java.awt.Dimension(150, 23));
        jPanel20.add(jtfReference);

        jlCodeAba.setText("C√≥digo ABA:");
        jlCodeAba.setPreferredSize(new java.awt.Dimension(150, 20));
        jPanel20.add(jlCodeAba);

        jtfCodeAba.setText("COD ABA");
        jtfCodeAba.setPreferredSize(new java.awt.Dimension(150, 23));
        jPanel20.add(jtfCodeAba);

        jlCodeSwift.setText("C√≥digo SWIFT: ");
        jlCodeSwift.setPreferredSize(new java.awt.Dimension(150, 20));
        jPanel20.add(jlCodeSwift);

        jtfCodeSwift.setText("COD SWIFT");
        jtfCodeSwift.setPreferredSize(new java.awt.Dimension(150, 23));
        jPanel20.add(jtfCodeSwift);

        jlCode.setText("Otro c√≥digo: ");
        jlCode.setPreferredSize(new java.awt.Dimension(150, 20));
        jPanel20.add(jlCode);

        jtfCode.setText("C√ìDIGO");
        jtfCode.setPreferredSize(new java.awt.Dimension(150, 23));
        jPanel20.add(jtfCode);

        jlAliasBajio.setText("Alias:");
        jlAliasBajio.setPreferredSize(new java.awt.Dimension(150, 20));
        jPanel20.add(jlAliasBajio);

        jtfAliasBajio.setText("ALIAS");
        jtfAliasBajio.setPreferredSize(new java.awt.Dimension(150, 23));
        jPanel20.add(jtfAliasBajio);

        jPanel17.add(jPanel20, java.awt.BorderLayout.CENTER);

        jPanel2.add(jPanel17, java.awt.BorderLayout.NORTH);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-916)/2, (screenSize.height-600)/2, 916, 600);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        windowActivate();
    }//GEN-LAST:event_formWindowActivated

    private void jckIsCardAppliyngItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jckIsCardAppliyngItemStateChanged
        itemStateChangedIsCardApplying();
    }//GEN-LAST:event_jckIsCardAppliyngItemStateChanged

    private void jcbDbmsFkBizPartnerIdItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbDbmsFkBizPartnerIdItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            itemStateChangedBizPartner();
        }
    }//GEN-LAST:event_jcbDbmsFkBizPartnerIdItemStateChanged

    private void jcbDbmsFkBizPartnerIdFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jcbDbmsFkBizPartnerIdFocusLost
        readBizPartnerCategory();
        
        if (moBizPartnerCategory.getIsCompany()) {
            if (msMsgError.isEmpty()) {
                miClient.showMsgBoxWarning(msMsgError = "No se pueden dar de alta cuentas bancarias para empresas.");
            }
        }
        else {
            msMsgError = "";
        }
    }//GEN-LAST:event_jcbDbmsFkBizPartnerIdFocusLost

    private void jtfBankAccountNumberStdFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfBankAccountNumberStdFocusLost
        jlFormatBankAccountNumberStdData.setText(SBpsUtils.bankAccountClaBeFormat(jtfBankAccountNumberStd.getText()));
    }//GEN-LAST:event_jtfBankAccountNumberStdFocusLost

    private void jtfBankAccountNumberFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfBankAccountNumberFocusLost
        jlFormatBankAccountNumberData.setText(SBpsUtils.bankAccountNumberFormat(jtfBankAccountNumber.getText()));
    }//GEN-LAST:event_jtfBankAccountNumberFocusLost

    private void initComponentsExtra() {
        int i = 0;
        mvFields = new Vector<>();

        erp.lib.table.STableColumnForm tableColumnsBankAccountCards[];
        erp.lib.table.STableColumnForm tableColumnsBankAccountLayoutType[];

        moBankAccountCardPane = new STablePane(miClient);
        moBankAccountCardPane.setDoubleClickAction(this, "publicActionModifyCard");
        jpBankAccountCard.add(moBankAccountCardPane, BorderLayout.CENTER);

        moBankAccountLayoutPane = new STablePane(miClient);
        jpBankAccountLayout.add(moBankAccountLayoutPane, BorderLayout.CENTER);

        moComboBoxGroupBizPartnerBranch = new SFormComboBoxGroup(miClient);
        moComboBoxGroupCategoryTypeCashAccount = new SFormComboBoxGroup(miClient);

        moFieldDbmsPkBizPartnerId = new SFormField(miClient, SLibConstants.DATA_TYPE_KEY, false, jcbDbmsFkBizPartnerId, jlDbmsFkBizPartnerId);
        moFieldDbmsPkBizPartnerId.setPickerButton(jbDbmsFkBizPartnerId);
        moFieldPkBizPartnerBranchId = new SFormField(miClient, SLibConstants.DATA_TYPE_KEY, false, jcbPkBizPartnerBranchId, jlPkBizPartnerBranchId);
        moFieldPkBizPartnerBranchId.setPickerButton(jbPkBizPartnerBranchId);
        moFieldFkAccountCashCategoryId = new SFormField(miClient, SLibConstants.DATA_TYPE_KEY, true, jcbFkAccountCashCategoryId, jlFkAccountCashCategoryId);
        moFieldFkAccountCashTypeId = new SFormField(miClient, SLibConstants.DATA_TYPE_KEY, true, jcbFkAccountCashTypeId, jlFkAccountCashTypeId);
        moFieldFkBankId = new SFormField(miClient, SLibConstants.DATA_TYPE_KEY, true, jcbFkBankId, jlFkBankId);
        moFieldFkBankId.setPickerButton(jbFkBankId);
        moFieldFkCurrencyId = new SFormField(miClient, SLibConstants.DATA_TYPE_KEY, true, jcbFkCurrencyId, jlFkCurrencyId);
        moFieldFkCurrencyId.setPickerButton(jbFkCurrencyId);
        moFieldBankAccount = new SFormField(miClient, SLibConstants.DATA_TYPE_STRING, true, jtfBankAccount, jlBankAccount);
        moFieldBankAccount.setLengthMax(50);
        moFieldBankAccountBranchNumber = new SFormField(miClient, SLibConstants.DATA_TYPE_STRING, false, jtfBankAccountBranchNumber, jlBankAccountBranchNumber);
        moFieldBankAccountBranchNumber.setLengthMax(25);
        moFieldBankAccountNumber = new SFormField(miClient, SLibConstants.DATA_TYPE_STRING, true, jtfBankAccountNumber, jlBankAccountNumber);
        moFieldBankAccountNumber.setLengthMax(25);
        moFieldBankAccountNumberStd = new SFormField(miClient, SLibConstants.DATA_TYPE_STRING, false, jtfBankAccountNumberStd, jlBankAccountNumberStd);
        moFieldBankAccountNumberStd.setLengthMin(18);
        moFieldBankAccountNumberStd.setLengthMax(18);
        moFieldAgree = new SFormField(miClient, SLibConstants.DATA_TYPE_STRING, false, jtfAgree, jlAgree);
        moFieldAgree.setLengthMax(25);
        moFieldReference = new SFormField(miClient, SLibConstants.DATA_TYPE_STRING, false, jtfReference, jlReference);
        moFieldReference.setLengthMax(25);
        moFieldCode = new SFormField(miClient, SLibConstants.DATA_TYPE_STRING, false, jtfCode, jlCode);
        moFieldCode.setLengthMax(25);
        moFieldCodeAba = new SFormField(miClient, SLibConstants.DATA_TYPE_STRING, false, jtfCodeAba, jlCodeAba);
        moFieldCodeAba.setLengthMax(25);
        moFieldCodeSwift = new SFormField(miClient, SLibConstants.DATA_TYPE_STRING, false, jtfCodeSwift, jlCodeSwift);
        moFieldCodeSwift.setLengthMax(25);
        moFieldAliasBajio = new SFormField(miClient, SLibConstants.DATA_TYPE_STRING, false, jtfAliasBajio, jlAliasBajio);
        moFieldAliasBajio.setLengthMax(15);
        moFieldFkCardIssuerId = new SFormField(miClient, SLibConstants.DATA_TYPE_KEY, false, jcbFkCardIssuerId, jlFkCardIssuerId);
        moFieldFkCardIssuerId.setPickerButton(jbFkCardIssuerId);
        moFieldIsCardApplying = new SFormField(miClient, SLibConstants.DATA_TYPE_BOOLEAN, false, jckIsCardAppliyng);
        moFieldIsDefault = new SFormField(miClient, SLibConstants.DATA_TYPE_BOOLEAN, false, jckIsDefault);
        moFieldIsDeleted = new SFormField(miClient, SLibConstants.DATA_TYPE_BOOLEAN, false, jckIsDeleted);

        mvFields.add(moFieldDbmsPkBizPartnerId);
        mvFields.add(moFieldPkBizPartnerBranchId);
        mvFields.add(moFieldFkAccountCashCategoryId);
        mvFields.add(moFieldFkAccountCashTypeId);
        mvFields.add(moFieldFkBankId);
        mvFields.add(moFieldFkCurrencyId);
        mvFields.add(moFieldBankAccount);
        mvFields.add(moFieldBankAccountBranchNumber);
        mvFields.add(moFieldBankAccountNumber);
        mvFields.add(moFieldBankAccountNumberStd);
        mvFields.add(moFieldAgree);
        mvFields.add(moFieldReference);
        mvFields.add(moFieldCode);
        mvFields.add(moFieldCodeAba);
        mvFields.add(moFieldCodeSwift);
        mvFields.add(moFieldAliasBajio);
        mvFields.add(moFieldFkCardIssuerId);
        mvFields.add(moFieldIsCardApplying);
        mvFields.add(moFieldIsDefault);
        mvFields.add(moFieldIsDeleted);

        moFormBizPartnerBranchBankAccountCard = new SFormBizPartnerBranchBankAccountCard(miClient);

        jbOk.addActionListener(this);
        jbCancel.addActionListener(this);
        jbAddCard.addActionListener(this);
        jbModifyCard.addActionListener(this);
        jbDbmsFkBizPartnerId.addActionListener(this);
        jbPkBizPartnerBranchId.addActionListener(this);
        jbFkBankId.addActionListener(this);
        jbFkCurrencyId.addActionListener(this);
        jbFkCardIssuerId.addActionListener(this);

        i = 0;
        tableColumnsBankAccountCards = new STableColumnForm[5];
        tableColumnsBankAccountCards[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_STRING, "Tipo tarjeta", 100);
        tableColumnsBankAccountCards[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_STRING, "Titular", 200);
        tableColumnsBankAccountCards[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_STRING, "No. tarjeta", 150);
        tableColumnsBankAccountCards[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_DATE, "Expiraci√≥n", STableConstants.WIDTH_DATE);
        tableColumnsBankAccountCards[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_BOOLEAN, "Eliminado", STableConstants.WIDTH_BOOLEAN);

        for (i = 0; i < tableColumnsBankAccountCards.length; i++) {
            moBankAccountCardPane.addTableColumn(tableColumnsBankAccountCards[i]);
        }

        i = 0;
        tableColumnsBankAccountLayoutType = new STableColumnForm[3];
        tableColumnsBankAccountLayoutType[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_STRING, "Banco", 150);
        tableColumnsBankAccountLayoutType[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_STRING, "Tipo layout", 200);
        tableColumnsBankAccountLayoutType[i] = new STableColumnForm(SLibConstants.DATA_TYPE_BOOLEAN, "Aplica pago", STableConstants.WIDTH_BOOLEAN);
        tableColumnsBankAccountLayoutType[i++].setEditable(true);

        for (i = 0; i < tableColumnsBankAccountLayoutType.length; i++) {
            moBankAccountLayoutPane.addTableColumn(tableColumnsBankAccountLayoutType[i]);
        }

        SFormUtilities.createActionMap(rootPane, this, "publicActionAdd", "add", KeyEvent.VK_N, KeyEvent.CTRL_DOWN_MASK);
        SFormUtilities.createActionMap(rootPane, this, "publicActionModify", "modify", KeyEvent.VK_M, KeyEvent.CTRL_DOWN_MASK);

        AbstractAction actionOk = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) { actionOk(); }
        };

        SFormUtilities.putActionMap(getRootPane(), actionOk, "ok", KeyEvent.VK_ENTER, KeyEvent.CTRL_DOWN_MASK);

        AbstractAction action = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) { actionCancel(); }
        };

        SFormUtilities.putActionMap(getRootPane(), action, "cancel", KeyEvent.VK_ESCAPE, 0);
    }

    private void windowActivate() {
        if (mbFirstTime) {
            mbFirstTime = false;
            if (jcbDbmsFkBizPartnerId.isEnabled()) {
                jcbDbmsFkBizPartnerId.requestFocus();
            }
            else {
                jcbFkAccountCashTypeId.requestFocus();
            }
        }
    }

    private void actionOk() {
        SFormValidation validation = formValidate();

        if (validation.getIsError()) {
            if (validation.getComponent() != null) {
                validation.getComponent().requestFocus();
            }
            if (validation.getMessage().length() > 0) {
                miClient.showMsgBoxWarning(validation.getMessage());
            }
        }
        else {
            mnFormResult = SLibConstants.FORM_RESULT_OK;
            setVisible(false);
        }
    }

    private void actionCancel() {
        mnFormResult = SLibConstants.FORM_RESULT_CANCEL;
        setVisible(false);
    }

    private void renderBankAccountCardSettings() {
        if (jckIsCardAppliyng.isSelected()) {
            jbFkCardIssuerId.setEnabled(true);
            jcbFkCardIssuerId.setEnabled(true);
            jbAddCard.setEnabled(true);
            jcbFkCardIssuerId.setFocusable(true);
            jbModifyCard.setEnabled(true);
        }
        else {
            jbFkCardIssuerId.setEnabled(false);
            jcbFkCardIssuerId.setEnabled(false);
            jcbFkCardIssuerId.setFocusable(false);
            jbAddCard.setEnabled(false);
            jbModifyCard.setEnabled(false);
            moFieldFkCardIssuerId.setKey(new int[] { SDataConstantsSys.FINU_CARD_ISS_NA });
        }
    }

    private void renderBizPartnerSettings() {
        if (mbParamIsInMainWindow) {
            jcbDbmsFkBizPartnerId.setEnabled(false);
            jbDbmsFkBizPartnerId.setEnabled(false);
            jcbPkBizPartnerBranchId.setEnabled(false);
            jbPkBizPartnerBranchId.setEnabled(false);
            jcbDbmsFkBizPartnerId.setEditable(true);
            moFieldDbmsPkBizPartnerId = new SFormField(miClient, SLibConstants.DATA_TYPE_STRING, false, jcbDbmsFkBizPartnerId, jlDbmsFkBizPartnerId);
            jcbDbmsFkBizPartnerId.setSelectedItem(new SFormComponentItem(new int[] { 0 }, msParamBizPartnerDescription));
            jcbPkBizPartnerBranchId.setEditable(true);
            moFieldPkBizPartnerBranchId = new SFormField(miClient, SLibConstants.DATA_TYPE_STRING, false, jcbPkBizPartnerBranchId, jlPkBizPartnerBranchId);
            jcbPkBizPartnerBranchId.setSelectedItem(new SFormComponentItem(new int[] { 0 }, msParamBizPartnerBranchDescription));
        }
        else  {
            if (moFieldDbmsPkBizPartnerId.getKeyAsIntArray()[0] > 0) {
                jcbDbmsFkBizPartnerId.setEnabled(false);
                jbDbmsFkBizPartnerId.setEnabled(false);
                jcbPkBizPartnerBranchId.setEnabled(false);
                jbPkBizPartnerBranchId.setEnabled(false);
            }
            else if (moFieldDbmsPkBizPartnerId.getKeyAsIntArray()[0] < 1) {
                jcbDbmsFkBizPartnerId.setEnabled(true);
                jbDbmsFkBizPartnerId.setEnabled(true);
            }

        }
    }

    private void actionAddCard() {
        if (jbAddCard.isEnabled()) {
            moFormBizPartnerBranchBankAccountCard.formRefreshCatalogues();
            moFormBizPartnerBranchBankAccountCard.formReset();
            moFormBizPartnerBranchBankAccountCard.setVisible(true);

            if (moFormBizPartnerBranchBankAccountCard.getFormResult() == erp.lib.SLibConstants.FORM_RESULT_OK) {
                moBankAccountCardPane.addTableRow(new SDataBizPartnerBranchBankAccountCardRow(moFormBizPartnerBranchBankAccountCard.getRegistry()));
                moBankAccountCardPane.renderTableRows();
                moBankAccountCardPane.setTableRowSelection(moBankAccountCardPane.getTableGuiRowCount() - 1);
            }
        }
    }

    private void actionModifyCard() {
        int index = moBankAccountCardPane.getTable().getSelectedRow();

        if (jbModifyCard.isEnabled()) {
            if (index != -1) {
                moFormBizPartnerBranchBankAccountCard.formRefreshCatalogues();
                moFormBizPartnerBranchBankAccountCard.formReset();
                moFormBizPartnerBranchBankAccountCard.setRegistry((SDataBizPartnerBranchBankAccountCard) moBankAccountCardPane.getTableRow(index).getData());
                moFormBizPartnerBranchBankAccountCard.setVisible(true);

                if (moFormBizPartnerBranchBankAccountCard.getFormResult() == erp.lib.SLibConstants.FORM_RESULT_OK) {
                    moBankAccountCardPane.getTableModel().getTableRows().set(index, new SDataBizPartnerBranchBankAccountCardRow(moFormBizPartnerBranchBankAccountCard.getRegistry()));
                    moBankAccountCardPane.renderTableRows();
                    moBankAccountCardPane.setTableRowSelection(index);
                }
            }
        }
    }

    private void actionFkBizPartnerId() {
        int nBpCategory = 0;

        switch (mnParamBizPartnerType) {
            case SDataConstants.BPSX_BP_SUP:
                nBpCategory = SDataConstantsSys.BPSS_CT_BP_SUP;
                break;
            case SDataConstants.BPSX_BP_CUS:
                nBpCategory = SDataConstantsSys.BPSS_CT_BP_CUS;
                break;
            case SDataConstants.BPSX_BP_CDR:
                nBpCategory = SDataConstantsSys.BPSS_CT_BP_CDR;
                break;
            case SDataConstants.BPSX_BP_DBR:
                nBpCategory = SDataConstantsSys.BPSS_CT_BP_DBR;
                break;
            default:
        }

        miClient.pickOption(mnParamBizPartnerType, moFieldDbmsPkBizPartnerId, nBpCategory == 0 ? null : new int[] { nBpCategory });
    }

    private void actionPkBizPartnerBranchId() {
        miClient.pickOption(SDataConstants.BPSU_BPB, moFieldPkBizPartnerBranchId, moFieldDbmsPkBizPartnerId.getKeyAsIntArray());
    }

    private void actionFkBankId() {
        miClient.pickOption(SDataConstants.BPSX_BP_ATT_BANK, moFieldFkBankId, null);
    }

    private void actionFkCurrencyId() {
        miClient.pickOption(SDataConstants.CFGU_CUR, moFieldFkCurrencyId, null);
    }

    private void actionFkCardIssuerId() {
        miClient.pickOption(SDataConstants.FINU_CARD_ISS, moFieldFkCardIssuerId, null);
    }

    private void readBizPartnerCategory() {
        if (moFieldDbmsPkBizPartnerId.getKeyAsIntArray()[0] > 0) {
            moBizPartnerCategory = (SDataBizPartner) SDataUtilities.readRegistry(miClient, SDataConstants.BPSU_BP, moFieldDbmsPkBizPartnerId.getKeyAsIntArray(), SLibConstants.EXEC_MODE_SILENT);
        }
    }
    
    private void readBizPartnerBranches() {
        if (moFieldDbmsPkBizPartnerId.getKeyAsIntArray()[0] > 0) {
            SFormUtilities.populateComboBox(miClient, jcbPkBizPartnerBranchId, SDataConstants.BPSU_BPB, moFieldDbmsPkBizPartnerId.getKeyAsIntArray());
            jcbPkBizPartnerBranchId.setEnabled(true);
            jbPkBizPartnerBranchId.setEnabled(true);
        }
        else {
            jcbPkBizPartnerBranchId.removeAllItems();
            jcbPkBizPartnerBranchId.setEnabled(false);
            jbPkBizPartnerBranchId.setEnabled(false);
        }
    }

    @SuppressWarnings("unchecked")
    private void readLayoutTypes() {
        String sql = "";
        ResultSet resulSet = null;
        SDataBizPartnerBranchBankAccountLayoutRow row = null;

        moBankAccountLayoutPane.clearTableRows();

        try {
            sql = "SELECT l.id_tp_lay_bank, l.tp_lay_bank, l.fid_tp_pay_bank, l.fid_bank, bp.bp " +
                    "FROM erp.finu_tp_lay_bank AS l " +
                    "INNER JOIN erp.bpsu_bp AS bp ON l.fid_bank = bp.id_bp " +
                    "WHERE l.b_del = 0 " +
                    "ORDER BY bp.bp, l.fid_bank, l.tp_lay_bank, l.id_tp_lay_bank ";

            resulSet = miClient.getSession().getStatement().executeQuery(sql);
            while (resulSet.next()) {
                row = new SDataBizPartnerBranchBankAccountLayoutRow();

                row.setFkTypePaymentBankId(resulSet.getInt("l.fid_tp_pay_bank"));
                row.setFkBankId(resulSet.getInt("l.fid_bank"));
                row.setPkTypeLayoutBankId(resulSet.getInt("l.id_tp_lay_bank"));
                row.setBank(resulSet.getString("bp.bp"));
                row.setLayoutType(resulSet.getString("l.tp_lay_bank"));
                row.setIsPayment(false);

                row.prepareTableRow();
                moBankAccountLayoutPane.addTableRow(row);
            }
            moBankAccountLayoutPane.renderTableRows();
            moBankAccountLayoutPane.setTableRowSelection(0);
        }
        catch (Exception e) {
            SLibUtilities.renderException(this, e);
        }
    }

    private void itemStateChangedBizPartner() {
        readBizPartnerBranches();
    }

    private void itemStateChangedIsCardApplying() {
        renderBankAccountCardSettings();
    }

    private java.lang.String getCurrencyKey(int key) {
        SDataCurrency oCurrency = null;

        oCurrency = (SDataCurrency) SDataUtilities.readRegistry(miClient, SDataConstants.CFGU_CUR, new int[] { key }, SLibConstants.EXEC_MODE_SILENT);

        return oCurrency.getKey();
    }

    public void publicActionModifyCard() {
        actionModifyCard();
    }

    public void publicActionAdd() {
        if (jbAddCard.isEnabled()) {
            actionAddCard();
        }
    }

    public void publicActionModify() {
        if (jbModifyCard.isEnabled()) {
            actionModifyCard();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JButton jbAddCard;
    private javax.swing.JButton jbCancel;
    private javax.swing.JButton jbDbmsFkBizPartnerId;
    private javax.swing.JButton jbFkBankId;
    private javax.swing.JButton jbFkCardIssuerId;
    private javax.swing.JButton jbFkCurrencyId;
    private javax.swing.JButton jbModifyCard;
    private javax.swing.JButton jbOk;
    private javax.swing.JButton jbPkBizPartnerBranchId;
    private javax.swing.JComboBox jcbDbmsFkBizPartnerId;
    private javax.swing.JComboBox jcbFkAccountCashCategoryId;
    private javax.swing.JComboBox jcbFkAccountCashTypeId;
    private javax.swing.JComboBox jcbFkBankId;
    private javax.swing.JComboBox jcbFkCardIssuerId;
    private javax.swing.JComboBox jcbFkCurrencyId;
    private javax.swing.JComboBox jcbPkBizPartnerBranchId;
    private javax.swing.JCheckBox jckIsCardAppliyng;
    private javax.swing.JCheckBox jckIsDefault;
    private javax.swing.JCheckBox jckIsDeleted;
    private javax.swing.JLabel jlAgree;
    private javax.swing.JLabel jlAliasBajio;
    private javax.swing.JLabel jlBankAccount;
    private javax.swing.JLabel jlBankAccountBranchNumber;
    private javax.swing.JLabel jlBankAccountNumber;
    private javax.swing.JLabel jlBankAccountNumberStd;
    private javax.swing.JLabel jlCode;
    private javax.swing.JLabel jlCodeAba;
    private javax.swing.JLabel jlCodeSwift;
    private javax.swing.JLabel jlDbmsFkBizPartnerId;
    private javax.swing.JLabel jlFkAccountCashCategoryId;
    private javax.swing.JLabel jlFkAccountCashTypeId;
    private javax.swing.JLabel jlFkBankId;
    private javax.swing.JLabel jlFkCardIssuerId;
    private javax.swing.JLabel jlFkCurrencyId;
    private javax.swing.JLabel jlFormatBankAccountNumber;
    private javax.swing.JLabel jlFormatBankAccountNumberData;
    private javax.swing.JLabel jlFormatBankAccountNumberStd;
    private javax.swing.JLabel jlFormatBankAccountNumberStdData;
    private javax.swing.JLabel jlPkBizPartnerBranchId;
    private javax.swing.JLabel jlReference;
    private javax.swing.JPanel jpBankAccountCard;
    private javax.swing.JPanel jpBankAccountLayout;
    private javax.swing.JTextField jtfAgree;
    private javax.swing.JTextField jtfAliasBajio;
    private javax.swing.JTextField jtfBankAccount;
    private javax.swing.JTextField jtfBankAccountBranchNumber;
    private javax.swing.JTextField jtfBankAccountNumber;
    private javax.swing.JTextField jtfBankAccountNumberStd;
    private javax.swing.JTextField jtfCode;
    private javax.swing.JTextField jtfCodeAba;
    private javax.swing.JTextField jtfCodeSwift;
    private javax.swing.JTextField jtfReference;
    // End of variables declaration//GEN-END:variables

    @Override
    public void formClearRegistry() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void formReset() {
        mnFormResult = SLibConstants.UNDEFINED;
        mnFormStatus = SLibConstants.UNDEFINED;
        mbFirstTime = true;

        moBizPartnerCategory = null;
        moBizPartnerBranchBankAccount = null;

        for (int i = 0; i < mvFields.size(); i++) {
            ((erp.lib.form.SFormField) mvFields.get(i)).resetField();
        }

        moBankAccountCardPane.createTable(null);
        moBankAccountCardPane.clearTableRows();
        moBankAccountLayoutPane.createTable(null);
        moBankAccountLayoutPane.clearTableRows();
        if (!mbParamIsInMainWindow) {
            moComboBoxGroupBizPartnerBranch.reset();
        }
        moComboBoxGroupCategoryTypeCashAccount.reset();
        moFieldFkCurrencyId.setFieldValue(new int[] { miClient.getSessionXXX().getParamsErp().getFkCurrencyId() });
        moFieldFkAccountCashCategoryId.setFieldValue(new int[] { SDataConstantsSys.FINS_CT_ACC_CASH_BANK });
        jcbFkAccountCashCategoryId.setEnabled(false);
        jbFkCardIssuerId.setEnabled(false);
        jcbFkCardIssuerId.setEnabled(false);
        jcbFkCardIssuerId.setFocusable(false);
        renderBankAccountCardSettings();
        renderBizPartnerSettings();
        readLayoutTypes();

        jckIsDeleted.setEnabled(false);
        
        jlFormatBankAccountNumberData.setText("");
        jlFormatBankAccountNumberStdData.setText("");
        
        msMsgError = "";
    }

    @Override
    public void formRefreshCatalogues() {
        moComboBoxGroupBizPartnerBranch.clear();
        moComboBoxGroupBizPartnerBranch.addComboBox(mnParamBizPartnerType, jcbDbmsFkBizPartnerId, jbDbmsFkBizPartnerId);
        moComboBoxGroupBizPartnerBranch.addComboBox(SDataConstants.BPSU_BPB, jcbPkBizPartnerBranchId, jbPkBizPartnerBranchId);

        moComboBoxGroupCategoryTypeCashAccount.clear();
        moComboBoxGroupCategoryTypeCashAccount.addComboBox(SDataConstants.FINS_CT_ACC_CASH, jcbFkAccountCashCategoryId);
        moComboBoxGroupCategoryTypeCashAccount.addComboBox(SDataConstants.FINS_TP_ACC_CASH, jcbFkAccountCashTypeId);

        SFormUtilities.populateComboBox(miClient, jcbFkBankId, SDataConstants.BPSX_BP_ATT_BANK);
        SFormUtilities.populateComboBox(miClient, jcbFkCurrencyId, SDataConstants.CFGU_CUR);
        SFormUtilities.populateComboBox(miClient, jcbFkCardIssuerId, SDataConstants.FINU_CARD_ISS);
    }

    @Override
    public erp.lib.form.SFormValidation formValidate() {
        SFormValidation validation = new SFormValidation();

        for (int i = 0; i < mvFields.size(); i++) {
            if (!((erp.lib.form.SFormField) mvFields.get(i)).validateField()) {
                validation.setIsError(true);
                validation.setComponent(((erp.lib.form.SFormField) mvFields.get(i)).getComponent());
                break;
            }
        }
        if (!validation.getIsError()) {
            if (!mbParamIsInMainWindow) {
                if (moFieldDbmsPkBizPartnerId.getKeyAsIntArray()[0] == 0) {
                    validation.setComponent(jcbDbmsFkBizPartnerId);
                    validation.setMessage("Se debe selecccionar una opci√≥n para el campo: '" + jlDbmsFkBizPartnerId.getText() + "'.");
                }
                else if (!msMsgError.isEmpty()) {
                    validation.setComponent(jcbDbmsFkBizPartnerId);
                    validation.setMessage(msMsgError);
                }
                else if (moFieldPkBizPartnerBranchId.getKeyAsIntArray()[0] == 0) {
                    validation.setComponent(jcbPkBizPartnerBranchId);
                    validation.setMessage("Se debe selecccionar una opci√≥n para el campo: '" + jlPkBizPartnerBranchId.getText() + "'.");
                }
            }
        }

        if (!validation.getIsError()) {
            for (STableRow row : moBankAccountLayoutPane.getTableModel().getTableRows()) {
                if (((Boolean) row.getValues().get(2))) {
                    if (moFieldFkBankId.getKeyAsIntArray()[0] == ((SDataBizPartnerBranchBankAccountLayoutRow) row).getFkBankId() && ((SDataBizPartnerBranchBankAccountLayoutRow) row).getFkTypePaymentBankId() != SDataConstantsSys.FINS_TP_PAY_BANK_THIRD) {
                        validation.setComponent(jpBankAccountLayout);
                        validation.setMessage("La cuenta bancaria no puede ser utilizada para '" + ((SDataBizPartnerBranchBankAccountLayoutRow) row).getLayoutType() + "'.");
                        break;
                    }
                    else if (moFieldFkBankId.getKeyAsIntArray()[0] != ((SDataBizPartnerBranchBankAccountLayoutRow) row).getFkBankId() && ((SDataBizPartnerBranchBankAccountLayoutRow) row).getFkTypePaymentBankId() == SDataConstantsSys.FINS_TP_PAY_BANK_THIRD) {
                        validation.setComponent(jpBankAccountLayout);
                        validation.setMessage("La cuenta bancaria no puede ser utilizada para '" + ((SDataBizPartnerBranchBankAccountLayoutRow) row).getLayoutType() + "'.");
                        break;
                    }
                    else if(moFieldFkBankId.getKeyAsIntArray()[0] != ((SDataBizPartnerBranchBankAccountLayoutRow) row).getFkBankId() && moFieldBankAccountNumberStd.getString().length() == 0) {
                        validation.setComponent(jtfBankAccountNumberStd);
                        validation.setMessage("La longitud del valor para el campo '" + jlBankAccountNumberStd.getText() + "' no puede ser menor a 1, para " + ((SDataBizPartnerBranchBankAccountLayoutRow) row).getLayoutType() + "'.");
                        break;
                    }
                }
            }
        }

        return validation;
    }

    @Override
    public void setFormStatus(int status) {
        mnFormStatus = status;
    }

    @Override
    public void setFormVisible(boolean visible) {
        setVisible(visible);
    }

    @Override
    public int getFormStatus() {
        return mnFormStatus;
    }

    @Override
    public int getFormResult() {
        return mnFormResult;
    }

    @Override
    public void setRegistry(erp.lib.data.SDataRegistry registry) {
        int index = 0;
        moBizPartnerBranchBankAccount = (SDataBizPartnerBranchBankAccount) registry;

        SDataBizPartnerBranchBankAccountCardRow cardRow = null;

        if (!mbParamIsInMainWindow) {
            moFieldDbmsPkBizPartnerId.setKey(new int[] { moBizPartnerBranchBankAccount.getDbmsPkBizPartnerId() });
            moFieldPkBizPartnerBranchId.setKey(new int[] { moBizPartnerBranchBankAccount.getPkBizPartnerBranchId() });
        }

        moFieldFkAccountCashCategoryId.setFieldValue(new int[] { moBizPartnerBranchBankAccount.getFkAccountCashCategoryId() });
        moFieldFkAccountCashTypeId.setFieldValue(new int[] { moBizPartnerBranchBankAccount.getFkAccountCashCategoryId(), moBizPartnerBranchBankAccount.getFkAccountCashTypeId() });
        moFieldFkBankId.setFieldValue(new int[] { moBizPartnerBranchBankAccount.getFkBankId() });
        moFieldFkCurrencyId.setFieldValue(new int[] { moBizPartnerBranchBankAccount.getFkCurrencyId() });
        moFieldBankAccount.setFieldValue(moBizPartnerBranchBankAccount.getBankAccount());
        moFieldBankAccountBranchNumber.setFieldValue(moBizPartnerBranchBankAccount.getBankAccountBranchNumber());
        moFieldBankAccountNumber.setFieldValue(moBizPartnerBranchBankAccount.getBankAccountNumber());
        moFieldBankAccountNumberStd.setFieldValue(moBizPartnerBranchBankAccount.getBankAccountNumberStd());        
        jlFormatBankAccountNumberData.setText(SBpsUtils.bankAccountNumberFormat(moBizPartnerBranchBankAccount.getBankAccountNumber()));        
        jlFormatBankAccountNumberStdData.setText(SBpsUtils.bankAccountClaBeFormat(moBizPartnerBranchBankAccount.getBankAccountNumberStd()));        
        moFieldAgree.setFieldValue(moBizPartnerBranchBankAccount.getAgree());
        moFieldReference.setFieldValue(moBizPartnerBranchBankAccount.getReference());
        moFieldCode.setFieldValue(moBizPartnerBranchBankAccount.getCode());
        moFieldCodeAba.setFieldValue(moBizPartnerBranchBankAccount.getCodeAba());
        moFieldCodeSwift.setFieldValue(moBizPartnerBranchBankAccount.getCodeSwift());
        moFieldAliasBajio.setFieldValue(moBizPartnerBranchBankAccount.getAliasBajio());
        moFieldFkCardIssuerId.setFieldValue(new int[] { moBizPartnerBranchBankAccount.getFkCardIssuerId() });
        moFieldIsCardApplying.setFieldValue(moBizPartnerBranchBankAccount.getIsCardApplying());
        moFieldIsDefault.setFieldValue(moBizPartnerBranchBankAccount.getIsDefault());
        moFieldIsDeleted.setFieldValue(moBizPartnerBranchBankAccount.getIsDeleted());

        for (int i = 0; i < moBizPartnerBranchBankAccount.getDbmsBankAccountCards().size(); i++) {
            cardRow = new SDataBizPartnerBranchBankAccountCardRow(moBizPartnerBranchBankAccount.getDbmsBankAccountCards().get(i));
            moBankAccountCardPane.addTableRow(cardRow);
        }

        moBankAccountCardPane.renderTableRows();
        if (moBankAccountCardPane.getTableGuiRowCount() > 0) {
            moBankAccountCardPane.setTableRowSelection(0);
        }

        for (int i = 0; i < moBizPartnerBranchBankAccount.getDbmsBankAccountLayoutBank().size(); i++) {
            for (STableRow row : moBankAccountLayoutPane.getTableModel().getTableRows()) {
                if (moBizPartnerBranchBankAccount.getDbmsBankAccountLayoutBank().get(i).getPkBankLayoutTypeId() == ((SDataBizPartnerBranchBankAccountLayoutRow) row).getPkTypeLayoutBankId()) {
                    moBankAccountLayoutPane.getTable().setValueAt(true, index, 2);
                }
                index++;
            }
            index = 0;
        }

        renderBizPartnerSettings();
        renderBankAccountCardSettings();
        readBizPartnerCategory();
        jckIsDeleted.setEnabled(moBizPartnerCategory != null && !moBizPartnerCategory.getIsCompany() ? true : false);
        jbDbmsFkBizPartnerId.setEnabled(false);
        jbPkBizPartnerBranchId.setEnabled(false);
    }

    @Override
    public erp.lib.data.SDataRegistry getRegistry() {
        SDataBizPartnerBranchBankAccountLayoutBank layoutBank = null;
        if (moBizPartnerBranchBankAccount == null) {
            moBizPartnerBranchBankAccount = new SDataBizPartnerBranchBankAccount();
            moBizPartnerBranchBankAccount.setFkUserNewId(miClient.getSession().getUser().getPkUserId());
        }
        else {
            moBizPartnerBranchBankAccount.setFkUserEditId(miClient.getSession().getUser().getPkUserId());
        }

        if (!mbParamIsInMainWindow) {
            moBizPartnerBranchBankAccount.setPkBizPartnerBranchId(moFieldPkBizPartnerBranchId.getKeyAsIntArray()[0]);
        }
        moBizPartnerBranchBankAccount.setFkAccountCashCategoryId(moFieldFkAccountCashCategoryId.getKeyAsIntArray()[0]);
        moBizPartnerBranchBankAccount.setFkAccountCashTypeId(moFieldFkAccountCashTypeId.getKeyAsIntArray()[1]);
        moBizPartnerBranchBankAccount.setFkBankId(moFieldFkBankId.getKeyAsIntArray()[0]);
        moBizPartnerBranchBankAccount.setFkCurrencyId(moFieldFkCurrencyId.getKeyAsIntArray()[0]);
        moBizPartnerBranchBankAccount.setBankAccount(moFieldBankAccount.getString());
        moBizPartnerBranchBankAccount.setBankAccountBranchNumber(moFieldBankAccountBranchNumber.getString());
        moBizPartnerBranchBankAccount.setBankAccountNumber(moFieldBankAccountNumber.getString());
        moBizPartnerBranchBankAccount.setBankAccountNumberStd(moFieldBankAccountNumberStd.getString());
        moBizPartnerBranchBankAccount.setAgree(moFieldAgree.getString());
        moBizPartnerBranchBankAccount.setReference(moFieldReference.getString());
        moBizPartnerBranchBankAccount.setCode(moFieldCode.getString());
        moBizPartnerBranchBankAccount.setCodeAba(moFieldCodeAba.getString());
        moBizPartnerBranchBankAccount.setCodeSwift(moFieldCodeSwift.getString());
        moBizPartnerBranchBankAccount.setAliasBajio(moFieldAliasBajio.getString());
        moBizPartnerBranchBankAccount.setFkCardIssuerId(moFieldFkCardIssuerId.getKeyAsIntArray()[0] == 0 ? SDataConstantsSys.FINU_CARD_ISS_NA : moFieldFkCardIssuerId.getKeyAsIntArray()[0]);
        moBizPartnerBranchBankAccount.setIsCardApplying(moFieldIsCardApplying.getBoolean());
        moBizPartnerBranchBankAccount.setIsDefault(moFieldIsDefault.getBoolean());
        moBizPartnerBranchBankAccount.setIsDeleted(moFieldIsDeleted.getBoolean());
        moBizPartnerBranchBankAccount.setDbmsAccountCashType(jcbFkAccountCashTypeId.getSelectedItem().toString());
        moBizPartnerBranchBankAccount.setDbmsBank(jcbFkBankId.getSelectedItem().toString());
        moBizPartnerBranchBankAccount.setDbmsCurrencyKey(getCurrencyKey(moFieldFkCurrencyId.getKeyAsIntArray()[0]));
        moBizPartnerBranchBankAccount.setDbmsCardIssuer(jcbFkCardIssuerId.getSelectedItem().toString());

        moBizPartnerBranchBankAccount.getDbmsBankAccountCards().removeAllElements();
        for (int i = 0; i < moBankAccountCardPane.getTable().getRowCount(); i++) {
            moBizPartnerBranchBankAccount.getDbmsBankAccountCards().add(
                    (erp.mbps.data.SDataBizPartnerBranchBankAccountCard) moBankAccountCardPane.getTableRow(i).getData());
        }

        moBizPartnerBranchBankAccount.getDbmsBankAccountLayoutBank().removeAllElements();
        for (STableRow row : moBankAccountLayoutPane.getTableModel().getTableRows()) {
            if (((Boolean) row.getValues().get(2))) {
                layoutBank = new SDataBizPartnerBranchBankAccountLayoutBank();
                layoutBank.setPkBankLayoutTypeId(((SDataBizPartnerBranchBankAccountLayoutRow) row).getPkTypeLayoutBankId());
                moBizPartnerBranchBankAccount.getDbmsBankAccountLayoutBank().add((erp.mbps.data.SDataBizPartnerBranchBankAccountLayoutBank) layoutBank);
            }
        }

        return moBizPartnerBranchBankAccount;
    }

    @Override
    public void setValue(int type, java.lang.Object value) {
        if (type == SDataConstantsSys.VALUE_BIZ_PARTNER_TYPE) {
            switch(((int[]) value)[0]) {
                case SDataConstants.BPSU_BANK_ACC:
                    mnParamBizPartnerType = SDataConstants.BPSU_BP;
                    break;
                case SDataConstants.BPSX_BANK_ACC_SUP:
                    mnParamBizPartnerType = SDataConstants.BPSX_BP_SUP;
                    break;
                case SDataConstants.BPSX_BANK_ACC_CUS:
                    mnParamBizPartnerType = SDataConstants.BPSX_BP_CUS;
                    break;
                case SDataConstants.BPSX_BANK_ACC_CDR:
                    mnParamBizPartnerType = SDataConstants.BPSX_BP_CDR;
                    break;
                case SDataConstants.BPSX_BANK_ACC_DBR:
                    mnParamBizPartnerType = SDataConstants.BPSX_BP_DBR;
                    break;
                case SDataConstants.BPSX_BANK_ACC_EMP:
                    mnParamBizPartnerType = SDataConstants.BPSX_BP_EMP;
                    break;
            }
        }
    }

    @Override
    public java.lang.Object getValue(int type) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public javax.swing.JLabel getTimeoutLabel() {
        return null;
    }

    @Override
    public void actionPerformed(java.awt.event.ActionEvent e) {
        if (e.getSource() instanceof javax.swing.JButton) {
            javax.swing.JButton button = (javax.swing.JButton) e.getSource();

            if (button == jbOk) {
                actionOk();
            }
            else if (button == jbCancel) {
                actionCancel();
            }
            else if (button == jbAddCard) {
                actionAddCard();
            }
            else if (button == jbModifyCard) {
                actionModifyCard();
            }
            else if (button == jbDbmsFkBizPartnerId) {
                actionFkBizPartnerId();
            }
            else if (button == jbPkBizPartnerBranchId) {
                actionPkBizPartnerBranchId();
            }
            else if (button == jbFkBankId) {
                actionFkBankId();
            }
            else if (button == jbFkCurrencyId) {
                actionFkCurrencyId();
            }
            else if (button == jbFkCardIssuerId) {
                actionFkCardIssuerId();
            }
        }
    }

    public void setParamIsInMainWindow(boolean b) { mbParamIsInMainWindow = b; }
    public void setParamBizPartnerDescription(java.lang.String s) { msParamBizPartnerDescription = s; }
    public void setParamBizPartnerBranchDescription(java.lang.String s) { msParamBizPartnerBranchDescription = s; }
}
