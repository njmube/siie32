/*
 * DFormCompany.java
 *
 * Created on 10 de abril de 2008, 01:42 AM
 */

package erp.mmfg.form;

import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import javax.swing.AbstractAction;
import java.text.DecimalFormat;
import java.util.Vector;

import erp.data.SDataConstants;
import erp.data.SDataConstantsSys;
import erp.data.SDataUtilities;
import erp.lib.form.SFormComponentItem;
import erp.lib.form.SFormField;
import erp.lib.form.SFormUtilities;
import erp.lib.form.SFormValidation;
import erp.lib.SLibConstants;
import erp.lib.SLibUtilities;
import erp.mitm.data.SDataItem;
import erp.mmfg.data.SDataBomSubgoods;

/**
 *
 * @author  Néstor Ávalos
 */
public class SFormBomSubgood extends javax.swing.JDialog implements erp.lib.form.SFormInterface, java.awt.event.ActionListener {

    private int mnFormType;
    private int mnFormResult;
    private int mnFormStatus;
    private boolean mbFirstTime;
    private boolean mbResetingForm;
    private java.util.Vector<erp.lib.form.SFormField> mvFields;
    private erp.client.SClientInterface miClient;

    private erp.mmfg.data.SDataBomSubgoods moBomSubgood;
    private erp.lib.form.SFormField moFieldItemBom;
    private erp.lib.form.SFormField moFieldFkItemId;
    private erp.lib.form.SFormField moFieldQty;
    private erp.lib.form.SFormField moFieldCostPercentage;
    private erp.lib.form.SFormField moFieldDateStart;
    private erp.lib.form.SFormField moFieldDateEnd_n;
    private erp.lib.form.SFormField moFieldIsDeleted;

    private erp.mitm.data.SDataItem moItem;

    /** Creates new form DFormCompany */
    public SFormBomSubgood(erp.client.SClientInterface client) {
        super(client.getFrame(), true);
        miClient = client;
        mnFormType = SDataConstants.MFG_SGDS;

        initComponents();
        initComponentsExtra();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpSgds = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jlItemBom = new javax.swing.JLabel();
        jtfItemBom = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jlFkItemId = new javax.swing.JLabel();
        jcbFkItemId = new javax.swing.JComboBox<SFormComponentItem>();
        jlDummy = new javax.swing.JLabel();
        jbFkItemId = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jlQty = new javax.swing.JLabel();
        jtfQty = new javax.swing.JTextField();
        jlDummy3 = new javax.swing.JLabel();
        jtfDbmsQtyUnitSymbol = new javax.swing.JTextField();
        jPanel20 = new javax.swing.JPanel();
        jlCostPercentage = new javax.swing.JLabel();
        jtfCostPercentage = new javax.swing.JTextField();
        jlDummy4 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jlDateStart = new javax.swing.JLabel();
        jftDateStart = new javax.swing.JFormattedTextField();
        jlDummy1 = new javax.swing.JLabel();
        jbSetDateStart = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jlDateEnd_n = new javax.swing.JLabel();
        jftDateEnd_n = new javax.swing.JFormattedTextField();
        jlDummy2 = new javax.swing.JLabel();
        jbSetDateEnd_n = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        jckIsDeleted = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jbOK = new javax.swing.JButton();
        jbCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Subproducto"); // NOI18N
        setModal(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jpSgds.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del registro:"));
        jpSgds.setPreferredSize(new java.awt.Dimension(770, 195));
        jpSgds.setLayout(new java.awt.GridLayout(7, 1));

        jPanel8.setPreferredSize(new java.awt.Dimension(520, 25));
        jPanel8.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 0, 1));

        jlItemBom.setText("Producto:"); // NOI18N
        jlItemBom.setPreferredSize(new java.awt.Dimension(120, 23));
        jPanel8.add(jlItemBom);

        jtfItemBom.setEditable(false);
        jtfItemBom.setText("ITEM"); // NOI18N
        jtfItemBom.setFocusable(false);
        jtfItemBom.setPreferredSize(new java.awt.Dimension(400, 23));
        jtfItemBom.setRequestFocusEnabled(false);
        jPanel8.add(jtfItemBom);

        jpSgds.add(jPanel8);

        jPanel9.setPreferredSize(new java.awt.Dimension(199, 25));
        jPanel9.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 0, 1));

        jlFkItemId.setText("Subproducto: *"); // NOI18N
        jlFkItemId.setPreferredSize(new java.awt.Dimension(120, 23));
        jPanel9.add(jlFkItemId);

        jcbFkItemId.setPreferredSize(new java.awt.Dimension(400, 23));
        jcbFkItemId.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jcbFkItemIdFocusLost(evt);
            }
        });
        jPanel9.add(jcbFkItemId);

        jlDummy.setText("jLabel1");
        jlDummy.setPreferredSize(new java.awt.Dimension(1, 23));
        jPanel9.add(jlDummy);

        jbFkItemId.setText("...");
        jbFkItemId.setToolTipText("Seleccionar subproducto");
        jbFkItemId.setFocusable(false);
        jbFkItemId.setPreferredSize(new java.awt.Dimension(23, 23));
        jPanel9.add(jbFkItemId);

        jpSgds.add(jPanel9);

        jPanel10.setPreferredSize(new java.awt.Dimension(219, 25));
        jPanel10.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 0, 1));

        jlQty.setText("Cantidad: *");
        jlQty.setPreferredSize(new java.awt.Dimension(120, 23));
        jPanel10.add(jlQty);

        jtfQty.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtfQty.setText("QUANTITY");
        jtfQty.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel10.add(jtfQty);

        jlDummy3.setText("jLabel1");
        jlDummy3.setPreferredSize(new java.awt.Dimension(1, 23));
        jPanel10.add(jlDummy3);

        jtfDbmsQtyUnitSymbol.setEditable(false);
        jtfDbmsQtyUnitSymbol.setFocusable(false);
        jtfDbmsQtyUnitSymbol.setPreferredSize(new java.awt.Dimension(28, 23));
        jPanel10.add(jtfDbmsQtyUnitSymbol);

        jpSgds.add(jPanel10);

        jPanel20.setPreferredSize(new java.awt.Dimension(219, 25));
        jPanel20.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 0, 1));

        jlCostPercentage.setText("Costo asignado: *");
        jlCostPercentage.setPreferredSize(new java.awt.Dimension(120, 23));
        jPanel20.add(jlCostPercentage);

        jtfCostPercentage.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtfCostPercentage.setText("COST PERCENTAGE");
        jtfCostPercentage.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel20.add(jtfCostPercentage);

        jlDummy4.setText("jLabel1");
        jlDummy4.setPreferredSize(new java.awt.Dimension(1, 23));
        jPanel20.add(jlDummy4);

        jpSgds.add(jPanel20);

        jPanel11.setPreferredSize(new java.awt.Dimension(244, 25));
        jPanel11.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 0, 1));

        jlDateStart.setText("Fecha inicial vigencia: *");
        jlDateStart.setPreferredSize(new java.awt.Dimension(120, 23));
        jPanel11.add(jlDateStart);

        jftDateStart.setText("dd/mm/yyyy");
        jftDateStart.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel11.add(jftDateStart);

        jlDummy1.setText("jLabel1");
        jlDummy1.setPreferredSize(new java.awt.Dimension(1, 23));
        jPanel11.add(jlDummy1);

        jbSetDateStart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/erp/img/cal_cal.gif"))); // NOI18N
        jbSetDateStart.setToolTipText("Seleccionar fecha inicial vigencia");
        jbSetDateStart.setPreferredSize(new java.awt.Dimension(23, 23));
        jPanel11.add(jbSetDateStart);

        jpSgds.add(jPanel11);

        jPanel12.setPreferredSize(new java.awt.Dimension(244, 25));
        jPanel12.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 0, 1));

        jlDateEnd_n.setText("Fecha final vigencia: ");
        jlDateEnd_n.setPreferredSize(new java.awt.Dimension(120, 14));
        jPanel12.add(jlDateEnd_n);

        jftDateEnd_n.setText("dd/mm/yyyy");
        jftDateEnd_n.setPreferredSize(new java.awt.Dimension(100, 20));
        jPanel12.add(jftDateEnd_n);

        jlDummy2.setText("jLabel1");
        jlDummy2.setPreferredSize(new java.awt.Dimension(1, 23));
        jPanel12.add(jlDummy2);

        jbSetDateEnd_n.setIcon(new javax.swing.ImageIcon(getClass().getResource("/erp/img/cal_cal.gif"))); // NOI18N
        jbSetDateEnd_n.setToolTipText("Seleccionar fecha final vigencia");
        jbSetDateEnd_n.setPreferredSize(new java.awt.Dimension(23, 23));
        jPanel12.add(jbSetDateEnd_n);

        jpSgds.add(jPanel12);

        jPanel13.setPreferredSize(new java.awt.Dimension(113, 25));
        jPanel13.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 0, 2));

        jckIsDeleted.setText("Registro eliminado");
        jPanel13.add(jckIsDeleted);

        jpSgds.add(jPanel13);

        getContentPane().add(jpSgds, java.awt.BorderLayout.CENTER);

        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jbOK.setText("Aceptar"); // NOI18N
        jbOK.setToolTipText("[Ctrl + Enter]");
        jbOK.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel2.add(jbOK);

        jbCancel.setText("Cancelar"); // NOI18N
        jbCancel.setToolTipText("[Escape]");
        jPanel2.add(jbCancel);

        getContentPane().add(jPanel2, java.awt.BorderLayout.PAGE_END);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-808)/2, (screenSize.height-282)/2, 808, 282);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        windowActivated();
    }//GEN-LAST:event_formWindowActivated

    private void jcbFkItemIdFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jcbFkItemIdFocusLost
        fkItemIdFocusLostFkItemId();
    }//GEN-LAST:event_jcbFkItemIdFocusLost

    private void initComponentsExtra() {
        mvFields = new Vector<SFormField>();

        moFieldItemBom = new erp.lib.form.SFormField(miClient, SLibConstants.DATA_TYPE_STRING, true, jtfItemBom, jlItemBom);
        moFieldItemBom.setLengthMax(255);
        moFieldFkItemId = new erp.lib.form.SFormField(miClient, SLibConstants.DATA_TYPE_KEY, true, jcbFkItemId, jlFkItemId);
        moFieldQty = new erp.lib.form.SFormField(miClient, SLibConstants.DATA_TYPE_DOUBLE, true, jtfQty, jlQty);
        moFieldCostPercentage = new SFormField(miClient, SLibConstants.DATA_TYPE_FLOAT, true, jtfCostPercentage, jlCostPercentage);
        moFieldCostPercentage.setDecimalFormat(new DecimalFormat("#,##0" + "." + SLibUtilities.textRepeat("0", 4) + "%"));
        moFieldCostPercentage.setIsPercent(true);
        moFieldCostPercentage.setFloatMax(1);
        moFieldCostPercentage.setMaxInclusive(true);
        moFieldDateStart = new erp.lib.form.SFormField(miClient, SLibConstants.DATA_TYPE_DATE, true, jftDateStart, jlDateStart);
        moFieldDateEnd_n = new erp.lib.form.SFormField(miClient, SLibConstants.DATA_TYPE_DATE, false, jftDateEnd_n, jlDateEnd_n);
        moFieldIsDeleted = new erp.lib.form.SFormField(miClient, SLibConstants.DATA_TYPE_BOOLEAN, false, jckIsDeleted);

        mvFields.add(moFieldItemBom);
        mvFields.add(moFieldFkItemId);
        mvFields.add(moFieldQty);
        mvFields.add(moFieldCostPercentage);
        mvFields.add(moFieldDateStart);
        mvFields.add(moFieldDateEnd_n);
        mvFields.add(moFieldIsDeleted);

        jbSetDateStart.addActionListener(this);
        jbSetDateEnd_n.addActionListener(this);
        jbOK.addActionListener(this);
        jbCancel.addActionListener(this);
        jbFkItemId.addActionListener(this);

        AbstractAction actionOk = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) { actionOk(); }
        };

        SFormUtilities.putActionMap(getRootPane(), actionOk, "ok", KeyEvent.VK_ENTER, KeyEvent.CTRL_DOWN_MASK);

        AbstractAction actionCancel = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) { actionCancel(); }
        };

        SFormUtilities.putActionMap(getRootPane(), actionCancel, "cancel", KeyEvent.VK_ESCAPE, 0);
    }

    private void windowActivated() {
        if (mbFirstTime) {
            mbFirstTime = false;
            jtfItemBom.requestFocus();
        }
    }

    public void fkItemIdFocusLostFkItemId() {

        if (jcbFkItemId.getSelectedIndex() > 0) {
            jtfDbmsQtyUnitSymbol.setText(((erp.lib.form.SFormComponentItem) jcbFkItemId.getModel().getSelectedItem()).getComplement().toString());
            moItem = (SDataItem) SDataUtilities.readRegistry(miClient, SDataConstants.ITMU_ITEM, moFieldFkItemId.getKey(), SLibConstants.EXEC_MODE_VERBOSE);
        }
    }

    private void actionSetDateStart() {
        miClient.getGuiDatePickerXXX().formReset();
        miClient.getGuiDatePickerXXX().setDate(moFieldDateStart.getDate());
        miClient.getGuiDatePickerXXX().setVisible(true);

        if (miClient.getGuiDatePickerXXX().getFormResult() == SLibConstants.FORM_RESULT_OK) {
            moFieldDateStart.setDate(miClient.getGuiDatePickerXXX().getGuiDate());
            jftDateStart.requestFocus();
        }
    }

    private void actionSetDateEnd_n() {
        miClient.getGuiDatePickerXXX().formReset();
        miClient.getGuiDatePickerXXX().setDate(moFieldDateEnd_n.getDate());
        miClient.getGuiDatePickerXXX().setVisible(true);

        if (miClient.getGuiDatePickerXXX().getFormResult() == SLibConstants.FORM_RESULT_OK) {
            moFieldDateEnd_n.setDate(miClient.getGuiDatePickerXXX().getGuiDate());
            jftDateEnd_n.requestFocus();
        }
    }

    private void actionFkItemId() {
        miClient.pickOption(SDataConstants.ITMX_ITEM_BOM_ITEM, moFieldFkItemId, null);
    }

    private void actionEdit(boolean edit) {

    }

    private void actionOk() {
        erp.lib.form.SFormValidation validation = formValidate();

        if (validation.getIsError()) {
            if (validation.getComponent() != null) {
                validation.getComponent().requestFocus();
            }
            if (validation.getMessage().length() > 0) {
                miClient.showMsgBoxWarning(validation.getMessage());
            }
        }
        else {
            mnFormResult = SLibConstants.FORM_RESULT_OK;
            setVisible(false);
        }
    }

    private void actionCancel() {
        mnFormResult = SLibConstants.FORM_RESULT_CANCEL;
        setVisible(false);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JButton jbCancel;
    private javax.swing.JButton jbFkItemId;
    private javax.swing.JButton jbOK;
    private javax.swing.JButton jbSetDateEnd_n;
    private javax.swing.JButton jbSetDateStart;
    private javax.swing.JComboBox<SFormComponentItem> jcbFkItemId;
    private javax.swing.JCheckBox jckIsDeleted;
    private javax.swing.JFormattedTextField jftDateEnd_n;
    private javax.swing.JFormattedTextField jftDateStart;
    private javax.swing.JLabel jlCostPercentage;
    private javax.swing.JLabel jlDateEnd_n;
    private javax.swing.JLabel jlDateStart;
    private javax.swing.JLabel jlDummy;
    private javax.swing.JLabel jlDummy1;
    private javax.swing.JLabel jlDummy2;
    private javax.swing.JLabel jlDummy3;
    private javax.swing.JLabel jlDummy4;
    private javax.swing.JLabel jlFkItemId;
    private javax.swing.JLabel jlItemBom;
    private javax.swing.JLabel jlQty;
    private javax.swing.JPanel jpSgds;
    private javax.swing.JTextField jtfCostPercentage;
    private javax.swing.JTextField jtfDbmsQtyUnitSymbol;
    private javax.swing.JTextField jtfItemBom;
    private javax.swing.JTextField jtfQty;
    // End of variables declaration//GEN-END:variables

    @Override
    public void formClearRegistry() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void formReset() {
        mnFormResult = SLibConstants.UNDEFINED;
        mnFormStatus = SLibConstants.UNDEFINED;
        mbFirstTime = true;

        moBomSubgood = null;
        moItem = null;

        for (int i = 0; i < mvFields.size(); i++) {
            ((SFormField) mvFields.get(i)).resetField();
        }

        moFieldDateStart.setFieldValue(miClient.getSessionXXX().getWorkingDate());
        moFieldDateEnd_n.setFieldValue(null);

        //jtfDbmsQtyUnitSymbol.setColumns(3);

        jckIsDeleted.setEnabled(false);
    }

    @Override
    public void formRefreshCatalogues() {
        SFormUtilities.populateComboBox(miClient, jcbFkItemId, SDataConstants.ITMX_ITEM_BOM_ITEM, null);
    }

    @Override
    public erp.lib.form.SFormValidation formValidate() {
        SFormValidation validation = new SFormValidation();

        for (int i = 0; i < mvFields.size(); i++) {
            if (!((SFormField) mvFields.get(i)).validateField()) {
                validation.setIsError(true);
                validation.setComponent(((SFormField) mvFields.get(i)).getComponent());
                break;
            }
        }

        return validation;
    }

    @Override
    public void setFormStatus(int status) {
        mnFormStatus = status;
    }

    @Override
    public void setFormVisible(boolean visible) {
        setVisible(visible);
    }

    @Override
    public int getFormStatus() {
        return mnFormStatus;
    }

    @Override
    public int getFormResult() {
        return mnFormResult;
    }

    @Override
    public void setRegistry(erp.lib.data.SDataRegistry registry) {
        moBomSubgood = (SDataBomSubgoods) registry;

        moFieldFkItemId.setKey(new int[] { moBomSubgood.getFkItem() });
        moFieldQty.setFieldValue(moBomSubgood.getQuantity());
        moFieldCostPercentage.setFieldValue(moBomSubgood.getCostPercentage());
        moFieldDateStart.setFieldValue(moBomSubgood.getDateStart());
        moFieldDateEnd_n.setFieldValue(moBomSubgood.getDateEnd_n());
        moFieldIsDeleted.setBoolean(moBomSubgood.getIsDeleted());

        jtfDbmsQtyUnitSymbol.setText(moBomSubgood.getDbmsUnitSymbol());

        jckIsDeleted.setEnabled(true);
    }

    @Override
    public erp.lib.data.SDataRegistry getRegistry() {
        if (moBomSubgood == null) {
            moBomSubgood = new SDataBomSubgoods();
            moBomSubgood.setFkUserNewId(miClient.getSession().getUser().getPkUserId());

            moBomSubgood.setDbmsUserNew(miClient.getSessionXXX().getUser().getUser());
            moBomSubgood.setDbmsUserEdit("(n/a)");
            moBomSubgood.setDbmsUserDelete("(n/a)");
            moBomSubgood.setUserNewTs(miClient.getSessionXXX().getWorkingDate());
            moBomSubgood.setUserEditTs(miClient.getSessionXXX().getWorkingDate());
            moBomSubgood.setUserDeleteTs(miClient.getSessionXXX().getWorkingDate());
        }
        else {
            moBomSubgood.setFkUserEditId(miClient.getSession().getUser().getPkUserId());
            moBomSubgood.setDbmsUserEdit(miClient.getSessionXXX().getUser().getUser());
            moBomSubgood.setUserEditTs(miClient.getSessionXXX().getWorkingDate());

            if (moFieldIsDeleted.getBoolean()) {
                moBomSubgood.setFkUserDeleteId(miClient.getSession().getUser().getPkUserId());
                moBomSubgood.setDbmsUserDelete(miClient.getSessionXXX().getUser().getUser());
                moBomSubgood.setUserDeleteTs(miClient.getSessionXXX().getWorkingDate());
            }
        }

        moBomSubgood.setFkItem(moFieldFkItemId.getKeyAsIntArray()[0]);
        moBomSubgood.setFkUnit(moBomSubgood.getFkUnit() == 0 ? moItem.getFkUnitId() :
            moBomSubgood.getFkItem() == moFieldFkItemId.getKeyAsIntArray()[0] ? moBomSubgood.getFkUnit() : moBomSubgood.getFkItem());
        moBomSubgood.setQty(moFieldQty.getDouble());
        moBomSubgood.setCostPercentage(moFieldCostPercentage.getDouble());
        moBomSubgood.setDateStart(moFieldDateStart.getDate());
        moBomSubgood.setDateEnd_n(moFieldDateEnd_n.getDate());
        moBomSubgood.setIsDeleted(moFieldIsDeleted.getBoolean());

        moBomSubgood.setDbmsItemKey(moItem.getKey());
        moBomSubgood.setDbmsItem(moItem.getItem());
        moBomSubgood.setDbmsUnitSymbol(jtfDbmsQtyUnitSymbol.getText());

        return moBomSubgood;
    }

    @Override
    public void setValue(int type, java.lang.Object value) {
        moFieldItemBom.setFieldValue(value.toString());
    }

    @Override
    public java.lang.Object getValue(int type) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public javax.swing.JLabel getTimeoutLabel() {
        return null;
    }

    @Override
    public void actionPerformed(java.awt.event.ActionEvent e) {
        if (e.getSource() instanceof javax.swing.JButton) {
            javax.swing.JButton button = (javax.swing.JButton) e.getSource();

            if (button == jbSetDateStart) {
                actionSetDateStart();
            }
            else if (button == jbSetDateEnd_n) {
                actionSetDateEnd_n();
            }
            else if (button == jbOK) {
                actionOk();
            }
            else if (button == jbCancel) {
                actionCancel();
            }
            else if (button == jbFkItemId) {
                actionFkItemId();
            }
        }
    }
}
