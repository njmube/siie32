/*
 * DFormCompany.java
 *
 * Created on 19 de agosto de 2008, 11:10 AM
 */

package erp.mmfg.form;

import java.awt.event.ActionEvent;
import java.awt.event.ItemEvent;
import java.awt.event.KeyEvent;
import java.util.Vector;
import javax.swing.AbstractAction;
import javax.swing.JLabel;

import erp.data.SDataConstants;
import erp.lib.form.SFormField;
import erp.lib.form.SFormUtilities;
import erp.lib.form.SFormValidation;
import erp.lib.SLibConstants;
import erp.mmfg.data.SDataBomNotes;

/**
 *
 * @author  Néstor Ávalos
 */
public class SFormBomNotes extends javax.swing.JDialog implements erp.lib.form.SFormInterface, java.awt.event.ActionListener {

    private int mnFormType;
    private int mnFormResult;
    private int mnFormStatus;
    private boolean mbFirstTime;
    private boolean mbResetingForm;
    private java.util.Vector<erp.lib.form.SFormField> mvFields;
    private erp.client.SClientInterface miClient;

    private erp.mmfg.data.SDataBomNotes moBomNotes;
    private erp.lib.form.SFormField moFieldNotes;
    private erp.lib.form.SFormField moFieldIsDeleted;

    /** Creates new form DFormCompany */
    public SFormBomNotes(erp.client.SClientInterface client) {
        super(client.getFrame(), true);
        miClient = client;
        mnFormType = SDataConstants.MFG_BOM_NTS;

        initComponents();
        initComponentsExtra();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpData = new javax.swing.JPanel();
        jpNotes = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtaNotes = new javax.swing.JTextArea();
        jlNotes = new javax.swing.JLabel();
        jckIsDeleted = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jbOK = new javax.swing.JButton();
        jbCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Nota"); // NOI18N
        setModal(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jpData.setLayout(new java.awt.BorderLayout(5, 5));

        jpNotes.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del registro:"));
        jpNotes.setLayout(new java.awt.BorderLayout(5, 5));

        jtaNotes.setColumns(20);
        jtaNotes.setRows(5);
        jtaNotes.setText("NOTES");
        jScrollPane1.setViewportView(jtaNotes);

        jpNotes.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jlNotes.setText("Notas: *");
        jpNotes.add(jlNotes, java.awt.BorderLayout.PAGE_START);

        jckIsDeleted.setText("Registro eliminado");
        jpNotes.add(jckIsDeleted, java.awt.BorderLayout.PAGE_END);

        jpData.add(jpNotes, java.awt.BorderLayout.CENTER);

        getContentPane().add(jpData, java.awt.BorderLayout.CENTER);

        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jbOK.setText("Aceptar"); // NOI18N
        jbOK.setToolTipText("[Ctrl + Enter]");
        jbOK.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel2.add(jbOK);

        jbCancel.setText("Cancelar"); // NOI18N
        jbCancel.setToolTipText("[Escape]");
        jPanel2.add(jbCancel);

        getContentPane().add(jPanel2, java.awt.BorderLayout.PAGE_END);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-608)/2, (screenSize.height-334)/2, 608, 334);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        windowActivated();
    }//GEN-LAST:event_formWindowActivated

    private void initComponentsExtra() {
        mvFields = new Vector<SFormField>();

        moFieldNotes = new erp.lib.form.SFormField(miClient, SLibConstants.DATA_TYPE_STRING, true, jtaNotes, jlNotes);
        moFieldNotes.setLengthMax(255);
        moFieldIsDeleted = new erp.lib.form.SFormField(miClient, SLibConstants.DATA_TYPE_BOOLEAN, false, jckIsDeleted);

        mvFields.add(moFieldNotes);
        mvFields.add(moFieldIsDeleted);

        jbOK.addActionListener(this);
        jbCancel.addActionListener(this);

        AbstractAction actionOk = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) { actionOk(); }
        };

        SFormUtilities.putActionMap(getRootPane(), actionOk, "ok", KeyEvent.VK_ENTER, KeyEvent.CTRL_DOWN_MASK);

        AbstractAction actionCancel = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) { actionCancel(); }
        };

        SFormUtilities.putActionMap(getRootPane(), actionCancel, "cancel", KeyEvent.VK_ESCAPE, 0);
    }

    private void windowActivated() {
        if (mbFirstTime) {
            mbFirstTime = false;
            jtaNotes.requestFocus();
        }
    }

    private void actionEdit(boolean edit) {

    }

    private void actionOk() {
        erp.lib.form.SFormValidation validation = formValidate();

        if (validation.getIsError()) {
            if (validation.getComponent() != null) {
                validation.getComponent().requestFocus();
            }
            if (validation.getMessage().length() > 0) {
                miClient.showMsgBoxWarning(validation.getMessage());
            }
        }
        else {
            mnFormResult = SLibConstants.FORM_RESULT_OK;
            setVisible(false);
        }
    }

    private void actionCancel() {
        mnFormResult = SLibConstants.FORM_RESULT_CANCEL;
        setVisible(false);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbCancel;
    private javax.swing.JButton jbOK;
    private javax.swing.JCheckBox jckIsDeleted;
    private javax.swing.JLabel jlNotes;
    private javax.swing.JPanel jpData;
    private javax.swing.JPanel jpNotes;
    private javax.swing.JTextArea jtaNotes;
    // End of variables declaration//GEN-END:variables

    @Override
    public void formClearRegistry() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void formReset() {
        mnFormResult = SLibConstants.UNDEFINED;
        mnFormStatus = SLibConstants.UNDEFINED;
        mbFirstTime = true;

        moBomNotes = null;

        for (int i = 0; i < mvFields.size(); i++) {
            ((erp.lib.form.SFormField) mvFields.get(i)).resetField();
        }

        jckIsDeleted.setEnabled(false);
    }

    @Override
    public void formRefreshCatalogues() {

    }

    @Override
    public erp.lib.form.SFormValidation formValidate() {
        erp.lib.form.SFormValidation validation = new SFormValidation();

        for (int i = 0; i < mvFields.size(); i++) {
            if (!((erp.lib.form.SFormField) mvFields.get(i)).validateField()) {
                validation.setIsError(true);
                validation.setComponent(((erp.lib.form.SFormField) mvFields.get(i)).getComponent());
                break;
            }
        }

        return validation;
    }

    @Override
    public void setFormStatus(int status) {
        mnFormStatus = status;
    }

    @Override
    public void setFormVisible(boolean visible) {
        setVisible(visible);
    }

    @Override
    public int getFormStatus() {
        return mnFormStatus;
    }

    @Override
    public int getFormResult() {
        return mnFormResult;
    }

    @Override
    public void setRegistry(erp.lib.data.SDataRegistry registry) {
        moBomNotes = (SDataBomNotes) registry;

        moFieldNotes.setFieldValue(moBomNotes.getNotes());
        moFieldIsDeleted.setBoolean(moBomNotes.getIsDeleted());

        jckIsDeleted.setEnabled(true);
    }

    @Override
    public erp.lib.data.SDataRegistry getRegistry() {
        if (moBomNotes == null) {
            moBomNotes = new SDataBomNotes();

            moBomNotes.setFkUserNewId(miClient.getSession().getUser().getPkUserId());
            moBomNotes.setDbmsUserNew(miClient.getSessionXXX().getUser().getUser());
            moBomNotes.setDbmsUserEdit("(n/a)");
            moBomNotes.setDbmsUserDelete("(n/a)");
            moBomNotes.setUserNewTs(miClient.getSessionXXX().getWorkingDate());
            moBomNotes.setUserEditTs(miClient.getSessionXXX().getWorkingDate());
            moBomNotes.setUserDeleteTs(miClient.getSessionXXX().getWorkingDate());
        }
        else {
            moBomNotes.setFkUserEditId(miClient.getSession().getUser().getPkUserId());
            moBomNotes.setDbmsUserEdit(miClient.getSessionXXX().getUser().getUser());
            moBomNotes.setUserEditTs(miClient.getSessionXXX().getWorkingDate());

            if (moFieldIsDeleted.getBoolean()) {
                moBomNotes.setFkUserDeleteId(miClient.getSession().getUser().getPkUserId());
                moBomNotes.setDbmsUserDelete(miClient.getSessionXXX().getUser().getUser());
                moBomNotes.setUserDeleteTs(miClient.getSessionXXX().getWorkingDate());
            }
        }

        moBomNotes.setNotes(moFieldNotes.getString());
        moBomNotes.setIsDeleted(moFieldIsDeleted.getBoolean());

        return moBomNotes;
    }

    @Override
    public void setValue(int type, java.lang.Object value) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public java.lang.Object getValue(int type) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public javax.swing.JLabel getTimeoutLabel() {
        return null;
    }

    @Override
    public void actionPerformed(java.awt.event.ActionEvent e) {
        if (e.getSource() instanceof javax.swing.JButton) {
            javax.swing.JButton button = (javax.swing.JButton) e.getSource();

            if (button == jbOK) {
                actionOk();
            }
            else if (button == jbCancel) {
                actionCancel();
            }
        }
    }
}
