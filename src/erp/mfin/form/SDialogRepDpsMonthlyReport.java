/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SDialogRepDpsMonthlyReport.java
 *
 * Created on 7/12/2010, 04:30:30 PM
 */

package erp.mfin.form;

import erp.data.SDataUtilities;
import erp.lib.SLibConstants;
import erp.lib.SLibTimeUtilities;
import erp.lib.SLibUtilities;
import erp.lib.form.SFormField;
import erp.lib.form.SFormUtilities;
import java.awt.Cursor;
import java.awt.event.KeyEvent;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.SpinnerNumberModel;

/**
 *
 * @author Sergio Flores
 */
public class SDialogRepDpsMonthlyReport extends javax.swing.JDialog {

    public static final int CFD = 1;
    public static final int CF = 2;

    private int mnFormType;
    private int mnFormResult;
    private boolean mbFirstTime;
    private java.lang.String msDocSng;
    private java.lang.String msDocPlr;

    private erp.client.SClientInterface miClient;
    private erp.lib.form.SFormField moFieldYear;

    /** Creates new form SDialogRepDpsMonthlyReport */
    public SDialogRepDpsMonthlyReport(erp.client.SClientInterface client, int formType) {
        super(client.getFrame(), true);
        miClient = client;
        mnFormType = formType;
        initComponents();
        initComponentsExtra();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jlYear = new javax.swing.JLabel();
        jtfYear = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jlPeriod = new javax.swing.JLabel();
        jsPeriod = new javax.swing.JSpinner();
        jPanel2 = new javax.swing.JPanel();
        jbOk = new javax.swing.JButton();
        jbCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Informe mensual");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Parámetros del informe mensual:"));
        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanel4.setLayout(new java.awt.GridLayout(2, 1, 0, 1));

        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlYear.setText("Ejercicio fiscal: *");
        jlYear.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel1.add(jlYear);

        jtfYear.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jtfYear.setText("0000");
        jtfYear.setPreferredSize(new java.awt.Dimension(50, 23));
        jPanel1.add(jtfYear);

        jPanel4.add(jPanel1);

        jPanel5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlPeriod.setText("Período contable: *");
        jlPeriod.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel5.add(jlPeriod);

        jsPeriod.setPreferredSize(new java.awt.Dimension(50, 23));
        jPanel5.add(jsPeriod);

        jPanel4.add(jPanel5);

        jPanel3.add(jPanel4, java.awt.BorderLayout.NORTH);

        getContentPane().add(jPanel3, java.awt.BorderLayout.CENTER);

        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jbOk.setText("Aceptar");
        jbOk.setToolTipText("[Ctrl + Enter]");
        jbOk.setPreferredSize(new java.awt.Dimension(75, 23));
        jbOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbOkActionPerformed(evt);
            }
        });
        jPanel2.add(jbOk);

        jbCancel.setText("Cancelar");
        jbCancel.setToolTipText("[Escape]");
        jbCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelActionPerformed(evt);
            }
        });
        jPanel2.add(jbCancel);

        getContentPane().add(jPanel2, java.awt.BorderLayout.PAGE_END);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-400)/2, (screenSize.height-300)/2, 400, 300);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        windowActivated();
    }//GEN-LAST:event_formWindowActivated

    private void jbOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbOkActionPerformed
        actionOk();
    }//GEN-LAST:event_jbOkActionPerformed

    private void jbCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelActionPerformed
        actionCancel();
    }//GEN-LAST:event_jbCancelActionPerformed

    private void initComponentsExtra() {
        moFieldYear = new SFormField(miClient, SLibConstants.DATA_TYPE_INTEGER, true, jtfYear, jlYear);
        moFieldYear.setIntegerMin(2000);
        moFieldYear.setIntegerMax(2100);
        moFieldYear.setMinInclusive(true);
        moFieldYear.setMaxInclusive(true);
        moFieldYear.setDecimalFormat(miClient.getSessionXXX().getFormatters().getYearFormat());

        jsPeriod.setModel(new SpinnerNumberModel(1, 1, 12, 1));

        switch (mnFormType) {
            case CFD:
                msDocSng = "comprobante digital";
                msDocPlr = "comprobantes digitales";
                setTitle(getTitle() + " de " + msDocPlr);
                break;
            case CF:
                msDocSng = "comprobante impreso";
                msDocPlr = "comprobantes impresos";
                setTitle(getTitle() + " de " + msDocPlr);
                break;
            default:
                SLibUtilities.renderException(this, new Exception(SLibConstants.MSG_ERR_UTIL_UNKNOWN_OPTION));
        }

        SFormUtilities.createActionMap(rootPane, this, "actionOk", "ok", KeyEvent.VK_ENTER, KeyEvent.CTRL_DOWN_MASK);
        SFormUtilities.createActionMap(rootPane, this, "actionCancel", "cancel", KeyEvent.VK_ESCAPE, 0);
    }

    private void windowActivated() {
        if (mbFirstTime) {
            mbFirstTime = false;
            jtfYear.requestFocus();
        }
    }

    public void actionOk() {
        if (moFieldYear.validateField()) {
            int docs = 0;
            int year = moFieldYear.getInteger();
            int period = (Integer) jsPeriod.getValue();
            Cursor cursor = null;
            File file = null;
            String fileName = "" + mnFormType + miClient.getSessionXXX().getCurrentCompany().getDbmsDataCompany().getFiscalId().trim() + (period >= 10 ? "" : "0") + period + year + ".txt";

            miClient.getFileChooser().setSelectedFile(new File(fileName));
            if (miClient.getFileChooser().showSaveDialog(miClient.getFrame()) == JFileChooser.APPROVE_OPTION) {
                try {
                    cursor = getCursor();
                    setCursor(new Cursor(Cursor.WAIT_CURSOR));

                    file = new File(miClient.getFileChooser().getSelectedFile().getParent() + "\\" + fileName);

                    if (mnFormType == CFD) {
                        docs = SDataUtilities.emitReportCfd(miClient, moFieldYear.getInteger(), (Integer) jsPeriod.getValue(), file);
                    }
                    else {
                        docs = SDataUtilities.emitReportCf(miClient, moFieldYear.getInteger(), (Integer) jsPeriod.getValue(), file);
                    }
                }
                catch (Exception e) {
                    SLibUtilities.renderException(this, e);
                }
                finally {
                    setCursor(cursor);
                    if (docs == 0) {
                        miClient.showMsgBoxInformation("No se encontró ningún " + msDocSng + " para el período " + moFieldYear.getInteger() + "-" + jsPeriod.getValue() + ".");
                    }
                    else {
                        miClient.showMsgBoxInformation("Se " + (docs == 1 ? "encontró " : "encontraron ") + docs + " " + (docs == 1 ? msDocSng : msDocPlr) + " para el período " + moFieldYear.getInteger() + "-" + jsPeriod.getValue() + ".\n" +
                                SLibConstants.MSG_INF_FILE_CREATE + file.getAbsolutePath());
                    }
                }

                if (docs > 0) {
                    mnFormResult = SLibConstants.FORM_RESULT_OK;
                    setVisible(false);
                }
            }
        }
    }

    public void actionCancel() {
        mnFormResult = SLibConstants.FORM_RESULT_CANCEL;
        setVisible(false);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JButton jbCancel;
    private javax.swing.JButton jbOk;
    private javax.swing.JLabel jlPeriod;
    private javax.swing.JLabel jlYear;
    private javax.swing.JSpinner jsPeriod;
    private javax.swing.JTextField jtfYear;
    // End of variables declaration//GEN-END:variables

    public void resetForm() {
        int[] date = SLibTimeUtilities.digestDate(miClient.getSessionXXX().getWorkingDate());

        mnFormResult = SLibConstants.UNDEFINED;
        mbFirstTime = true;

        moFieldYear.setFieldValue(date[0]);
        jsPeriod.setValue(date[1]);
    }

    public int getFormResult() {
        return mnFormResult;
    }
}
