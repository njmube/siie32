/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SDialogBankPaymentFile.java
 *
 * Created on 25/06/2012, 05:02:26 PM
 */

package erp.mfin.form;

import erp.data.SDataConstants;
import erp.data.SDataConstantsSys;
import erp.data.SDataReadDescriptions;
import erp.data.SDataUtilities;
import erp.lib.SLibConstants;
import erp.lib.SLibTimeUtilities;
import erp.lib.form.SFormComponentItem;
import erp.lib.form.SFormField;
import erp.lib.form.SFormUtilities;
import erp.mbps.data.SDataBizPartnerBranchBankAccount;
import erp.mfin.data.SDataAccountCash;
import erp.mod.fin.db.SFinConsts;
import java.awt.event.ActionEvent;
import java.awt.event.ItemEvent;
import java.awt.event.KeyEvent;
import java.util.Date;
import java.util.Vector;
import javax.swing.AbstractAction;
import javax.swing.JButton;
import javax.swing.JComponent;
import sa.gui.util.SUtilConsts;

/**
 *
 * @author Juan Barajas
 */
public class SDialogBankPaymentFile extends javax.swing.JDialog implements java.awt.event.ActionListener {

    private erp.client.SClientInterface miClient;
    private boolean mbFirstTime;

    private erp.lib.form.SFormField moFieldDate;
    private erp.lib.form.SFormField moFieldLayoutId;
    private erp.lib.form.SFormField moFieldPkBankLayoutTypeId;
    private erp.lib.form.SFormField moFieldAccountDebit;
    private erp.lib.form.SFormField moFieldConcept;
    private erp.lib.form.SFormField moFieldDescription;
    private erp.lib.form.SFormField moFieldConsecutiveDay;

    private erp.mfin.data.SDataAccountCash moDataAccountCash;
    private erp.mbps.data.SDataBizPartnerBranchBankAccount moDataBizPartnerBranchBankAccount;
    //private erp.mfin.form.SDialogBankPaymentLayout moDialogPaymentDpsLayout;
    private java.util.Vector<erp.lib.form.SFormField> mvFields;

    private int mnFkCurrencyId;
    private int mnPkLayoutId;
    private int mnFkLayoutPaymentId;
    private int mnFkLayoutTypeId;
    private int mnFkLayoutBankId;
    private String msAccountDebit;

    /** Creates new form SDialogBankPaymentFile */
    public SDialogBankPaymentFile(erp.client.SClientInterface client) {
        super(client.getFrame(), true);
        miClient = client;
        initComponents();
        initComponentsExtra();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jlDate = new javax.swing.JLabel();
        jftDate = new javax.swing.JFormattedTextField();
        jbDate = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jlPkLayouId = new javax.swing.JLabel();
        jcbPkLayoutId = new javax.swing.JComboBox();
        jPanel8 = new javax.swing.JPanel();
        jlPkBankLayoutTypeId = new javax.swing.JLabel();
        jcbPkBankLayoutTypeId = new javax.swing.JComboBox();
        jPanel11 = new javax.swing.JPanel();
        jlAccountDebit = new javax.swing.JLabel();
        jcbAccountDebit = new javax.swing.JComboBox();
        jbAccountDebit = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jlAccountCurrencyId = new javax.swing.JLabel();
        jtfAccountCurrencyKey = new javax.swing.JTextField();
        jPanel10 = new javax.swing.JPanel();
        jlConcept = new javax.swing.JLabel();
        jtfConcept = new javax.swing.JTextField();
        jPanel12 = new javax.swing.JPanel();
        jlDescription = new javax.swing.JLabel();
        jtfDescription = new javax.swing.JTextField();
        jPanel13 = new javax.swing.JPanel();
        jlConsecutiveDay = new javax.swing.JLabel();
        jtfConsecutiveDay = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jbOk = new javax.swing.JButton();
        jbClose = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Archivo pagos interbancarios");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Parámetros del pago:"));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel5.setLayout(new java.awt.BorderLayout(0, 5));

        jPanel6.setLayout(new java.awt.GridLayout(8, 1, 0, 5));

        jPanel3.setLayout(new java.awt.FlowLayout(0, 2, 0));

        jlDate.setText("Vencimiento: *");
        jlDate.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel3.add(jlDate);

        jftDate.setText("dd/mm/yyyy");
        jftDate.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel3.add(jftDate);

        jbDate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/erp/img/cal_cal.gif"))); // NOI18N
        jbDate.setToolTipText("Seleccionar fecha");
        jbDate.setFocusable(false);
        jbDate.setPreferredSize(new java.awt.Dimension(23, 23));
        jPanel3.add(jbDate);

        jPanel6.add(jPanel3);

        jPanel7.setLayout(new java.awt.FlowLayout(0, 2, 0));

        jlPkLayouId.setText("Layout: *");
        jlPkLayouId.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel7.add(jlPkLayouId);

        jcbPkLayoutId.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbPkLayoutId.setPreferredSize(new java.awt.Dimension(345, 23));
        jcbPkLayoutId.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbPkLayoutIdItemStateChanged(evt);
            }
        });
        jPanel7.add(jcbPkLayoutId);

        jPanel6.add(jPanel7);

        jPanel8.setLayout(new java.awt.FlowLayout(0, 2, 0));

        jlPkBankLayoutTypeId.setText("Tipo layout: *");
        jlPkBankLayoutTypeId.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel8.add(jlPkBankLayoutTypeId);

        jcbPkBankLayoutTypeId.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbPkBankLayoutTypeId.setPreferredSize(new java.awt.Dimension(345, 23));
        jcbPkBankLayoutTypeId.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbPkBankLayoutTypeIdItemStateChanged(evt);
            }
        });
        jPanel8.add(jcbPkBankLayoutTypeId);

        jPanel6.add(jPanel8);

        jPanel11.setLayout(new java.awt.FlowLayout(0, 2, 0));

        jlAccountDebit.setText("Cuenta cargo: *");
        jlAccountDebit.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel11.add(jlAccountDebit);

        jcbAccountDebit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbAccountDebit.setPreferredSize(new java.awt.Dimension(345, 23));
        jcbAccountDebit.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbAccountDebitItemStateChanged(evt);
            }
        });
        jPanel11.add(jcbAccountDebit);

        jbAccountDebit.setText("jButton1");
        jbAccountDebit.setFocusable(false);
        jbAccountDebit.setPreferredSize(new java.awt.Dimension(23, 23));
        jPanel11.add(jbAccountDebit);

        jPanel6.add(jPanel11);

        jPanel4.setLayout(new java.awt.FlowLayout(0, 2, 0));

        jlAccountCurrencyId.setText("Moneda:");
        jlAccountCurrencyId.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel4.add(jlAccountCurrencyId);

        jtfAccountCurrencyKey.setEditable(false);
        jtfAccountCurrencyKey.setText("CUR");
        jtfAccountCurrencyKey.setToolTipText("Moneda");
        jtfAccountCurrencyKey.setFocusable(false);
        jtfAccountCurrencyKey.setPreferredSize(new java.awt.Dimension(50, 23));
        jPanel4.add(jtfAccountCurrencyKey);

        jPanel6.add(jPanel4);

        jPanel10.setLayout(new java.awt.FlowLayout(0, 2, 0));

        jlConcept.setText("Concepto pago: *");
        jlConcept.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel10.add(jlConcept);

        jtfConcept.setText("CONCEPT");
        jtfConcept.setPreferredSize(new java.awt.Dimension(345, 23));
        jPanel10.add(jtfConcept);

        jPanel6.add(jPanel10);

        jPanel12.setLayout(new java.awt.FlowLayout(0, 2, 0));

        jlDescription.setText("Descripción cargo: *");
        jlDescription.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel12.add(jlDescription);

        jtfDescription.setText("DESCRIPTION");
        jtfDescription.setPreferredSize(new java.awt.Dimension(345, 23));
        jPanel12.add(jtfDescription);

        jPanel6.add(jPanel12);

        jPanel13.setLayout(new java.awt.FlowLayout(0, 2, 0));

        jlConsecutiveDay.setText("Consecutivo día: *");
        jlConsecutiveDay.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel13.add(jlConsecutiveDay);

        jtfConsecutiveDay.setText("CONCEPT");
        jtfConsecutiveDay.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel13.add(jtfConsecutiveDay);

        jPanel6.add(jPanel13);

        jPanel5.add(jPanel6, java.awt.BorderLayout.NORTH);

        jPanel2.add(jPanel5, java.awt.BorderLayout.NORTH);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        jPanel1.setLayout(new java.awt.FlowLayout(2));

        jbOk.setText("Aceptar");
        jbOk.setToolTipText("[Ctrl + Enter]");
        jbOk.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel1.add(jbOk);

        jbClose.setText("Cerrar");
        jbClose.setToolTipText("[Escape]");
        jbClose.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel1.add(jbClose);

        getContentPane().add(jPanel1, java.awt.BorderLayout.SOUTH);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-503)/2, (screenSize.height-326)/2, 503, 326);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        windowActivated();
    }//GEN-LAST:event_formWindowActivated

    private void jcbPkBankLayoutTypeIdItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbPkBankLayoutTypeIdItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            itemStateChangedBankLayoutTypeId();
        }
    }//GEN-LAST:event_jcbPkBankLayoutTypeIdItemStateChanged

    private void jcbAccountDebitItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbAccountDebitItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            itemStateChangedAccountDebit();
        }
    }//GEN-LAST:event_jcbAccountDebitItemStateChanged

    private void jcbPkLayoutIdItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbPkLayoutIdItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            itemStateChangedLayout();
        }
    }//GEN-LAST:event_jcbPkLayoutIdItemStateChanged

    private void initComponentsExtra() {
        moFieldDate = new SFormField(miClient, SLibConstants.DATA_TYPE_DATE, true, jftDate, jlDate);
        moFieldDate.setPickerButton(jbDate);
        moFieldLayoutId = new SFormField(miClient, SLibConstants.DATA_TYPE_KEY, true, jcbPkLayoutId, jlPkLayouId);
        moFieldPkBankLayoutTypeId = new SFormField(miClient, SLibConstants.DATA_TYPE_KEY, true, jcbPkBankLayoutTypeId, jlPkBankLayoutTypeId);
        moFieldAccountDebit = new SFormField(miClient, SLibConstants.DATA_TYPE_KEY, true, jcbAccountDebit, jlAccountDebit);
        moFieldAccountDebit.setPickerButton(jbAccountDebit);
        moFieldConcept = new SFormField(miClient, SLibConstants.DATA_TYPE_STRING, true, jtfConcept, jlConcept);
        moFieldConcept.setLengthMax(30);
        moFieldDescription = new SFormField(miClient, SLibConstants.DATA_TYPE_STRING, true, jtfDescription, jlDescription);
        moFieldDescription.setLengthMax(40);
        moFieldConsecutiveDay = new SFormField(miClient, SLibConstants.DATA_TYPE_INTEGER, true, jtfConsecutiveDay, jlConsecutiveDay);
        moFieldConsecutiveDay.setLengthMax(3);

        mvFields = new Vector<>();
        mvFields.add(moFieldDate);
        mvFields.add(moFieldLayoutId);
        mvFields.add(moFieldPkBankLayoutTypeId);
        mvFields.add(moFieldAccountDebit);
        mvFields.add(moFieldConcept);
        mvFields.add(moFieldDescription);
        mvFields.add(moFieldConsecutiveDay);

        jbDate.addActionListener(this);
        jbAccountDebit.addActionListener(this);
        jbOk.addActionListener(this);
        jbClose.addActionListener(this);

        resetForm();

        AbstractAction actionOk = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) { actionOk(); }
        };

        SFormUtilities.putActionMap(getRootPane(), actionOk, "ok", KeyEvent.VK_ENTER, KeyEvent.CTRL_DOWN_MASK);

        AbstractAction actionClose = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) { actionClose(); }
        };

        SFormUtilities.putActionMap(getRootPane(), actionClose, "close", KeyEvent.VK_ESCAPE, 0);
    }

    private void windowActivated() {
        if (mbFirstTime) {
            if (miClient.getSessionXXX().getCurrentCompanyBranchId() == 0) {
                // A company branch must be selected:
                miClient.showMsgBoxWarning(SLibConstants.MSG_ERR_GUI_SESSION_BRANCH);
                actionClose();
                mbFirstTime = false;
            }
            else {
                mbFirstTime = false;
                jftDate.requestFocus();
            }
        }
    }

    private void generate() {
        int year = SLibTimeUtilities.digestYear(moFieldDate.getDate())[0];
        /*
        moDialogPaymentDpsLayout = new SDialogBankPaymentLayout(miClient);

        moDialogPaymentDpsLayout.formReset();
        moDialogPaymentDpsLayout.setParams(year, moFieldDate.getDate(), mnFkLayoutBankId,
                                            mnFkCurrencyId, moFieldPkBankLayoutTypeId.getString(), msAccountDebit, moFieldConcept.getString(), (int) moFieldConsecutiveDay.getInteger());
        moDialogPaymentDpsLayout.showDps();
        */
    }

    private void actionDate() {
        miClient.getGuiDatePickerXXX().pickDate(moFieldDate.getDate(), moFieldDate);
    }

    private void actionAccountDebit() {
        miClient.pickOption(SDataConstants.FINX_ACC_CASH_BANK, moFieldAccountDebit, new int[] { miClient.getSessionXXX().getCurrentCompanyBranchId() });
    }

    private void actionOk() {
        boolean error = false;
        JComponent component = null;

        for (SFormField field : mvFields) {
            if (!field.validateField()) {
                error = true;
                component = field.getComponent();
                break;
            }
        }

        if (error) {
            if (component != null) {
                component.requestFocus();
            }
        }
        else if (mnFkLayoutBankId != moDataBizPartnerBranchBankAccount.getFkBankId()) {
            miClient.showMsgBoxWarning("El valor para el campo '" + jlAccountDebit.getText() + "', debe pertenecer al banco '" +
                    SDataReadDescriptions.getCatalogueDescription(miClient, SDataConstants.BPSU_BP, new int[] { mnFkLayoutBankId }, SLibConstants.DESCRIPTION_CODE) + "'.");
            jcbAccountDebit.requestFocus();
        }
        else {
            generate();
        }
    }

    private void actionClose() {
        setVisible(false);
    }

    private void renderBankLayoutSettings() {
        jtfDescription.setText("");
        jtfConcept.setText("");

        if (moFieldPkBankLayoutTypeId.getKeyAsIntArray()[0] > 0) {
            mnFkLayoutPaymentId = ((int[]) ((SFormComponentItem) jcbPkBankLayoutTypeId.getSelectedItem()).getForeignKey())[0];
            mnFkLayoutBankId = ((int[]) ((SFormComponentItem) jcbPkBankLayoutTypeId.getSelectedItem()).getForeignKey())[1];
            mnFkLayoutTypeId = ((int[]) ((SFormComponentItem) jcbPkBankLayoutTypeId.getSelectedItem()).getPrimaryKey())[0];
            mnPkLayoutId = ((int[]) ((SFormComponentItem) jcbPkLayoutId.getSelectedItem()).getPrimaryKey())[0];

            switch (mnFkLayoutPaymentId) {
                 case SDataConstantsSys.FINS_TP_PAY_BANK_THIRD:
                     jtfConcept.setEnabled(true);
                     jtfDescription.setEnabled(false);
                    break;
                case SDataConstantsSys.FINS_TP_PAY_BANK_TEF:
                     jtfConcept.setEnabled(false);
                     jtfDescription.setEnabled(false);
                    break;
                case SDataConstantsSys.FINS_TP_PAY_BANK_SPEI_FD_N:
                     jtfConcept.setEnabled(true);
                     jtfDescription.setEnabled(mnPkLayoutId != SFinConsts.LAY_BANK_BANBAJIO);
                    break;
                case SDataConstantsSys.FINS_TP_PAY_BANK_SPEI_FD_Y:
                     jtfConcept.setEnabled(true);
                     jtfDescription.setEnabled(false);
                    break;
                default :
                    break;
            }
            jtfConcept.setEnabled(mnPkLayoutId == SFinConsts.LAY_BANK_SANTANDER);
            jtfConsecutiveDay.setEnabled(mnPkLayoutId == SFinConsts.LAY_BANK_BANBAJIO);
        }
        else {
            jtfConcept.setEnabled(false);
            jtfDescription.setEnabled(false);
            jtfConsecutiveDay.setEnabled(false);
        }
    }

    private void renderAccountSettings() {
        if (moFieldAccountDebit.getKeyAsIntArray()[0] > 0) {
            moDataAccountCash = (SDataAccountCash) SDataUtilities.readRegistry(miClient, SDataConstants.FIN_ACC_CASH, moFieldAccountDebit.getKey(), SLibConstants.EXEC_MODE_SILENT);

            moDataBizPartnerBranchBankAccount = (SDataBizPartnerBranchBankAccount) SDataUtilities.readRegistry(miClient, SDataConstants.BPSU_BANK_ACC, new int[] { moDataAccountCash.getFkBizPartnerBranchId_n(), moDataAccountCash.getFkBankAccountId_n() }, SLibConstants.EXEC_MODE_SILENT);
            jtfAccountCurrencyKey.setText(SDataReadDescriptions.getCatalogueDescription(miClient, SDataConstants.CFGU_CUR, new int[] { moDataBizPartnerBranchBankAccount.getFkCurrencyId() }, SLibConstants.DESCRIPTION_CODE));
            mnFkCurrencyId = moDataBizPartnerBranchBankAccount.getFkCurrencyId();
            msAccountDebit = moDataBizPartnerBranchBankAccount.getBankAccountNumber();
        }
        else {
            moDataBizPartnerBranchBankAccount = null;
            jtfAccountCurrencyKey.setText("");
        }
    }
    
    private void renderLayoutSettings() {
        if (moFieldLayoutId.getKeyAsIntArray()[0] > 0) {
            SFormUtilities.populateComboBox(miClient, jcbPkBankLayoutTypeId, SDataConstants.FINU_TP_LAY_BANK, new int[] { moFieldLayoutId.getKeyAsIntArray()[0] });
            jcbPkBankLayoutTypeId.setEnabled(true);
        }
        else {
            jcbPkBankLayoutTypeId.setEnabled(false);
        }
    }
    
    private void populateLayoutBank() {
        Vector<SFormComponentItem> items = new Vector<SFormComponentItem>();

        items.add(new SFormComponentItem(new int[] { 0 }, "(" + SUtilConsts.TXT_SELECT + " layout)"));
        items.add(new SFormComponentItem(new int[] { 1 }, SFinConsts.TXT_LAY_BANK_HSBC));
        items.add(new SFormComponentItem(new int[] { 2 }, SFinConsts.TXT_LAY_BANK_SANTANDER));
        items.add(new SFormComponentItem(new int[] { 3 }, SFinConsts.TXT_LAY_BANK_BANBAJIO));
        
        jcbPkLayoutId.removeAllItems();
        for (int i = 0; i < items.size(); i++) {
            jcbPkLayoutId.addItem(items.get(i));
        }
    }

    private void itemStateChangedBankLayoutTypeId() {
        renderBankLayoutSettings();
    }

    private void itemStateChangedAccountDebit() {
        renderAccountSettings();
    }
    
    private void itemStateChangedLayout() {
        renderLayoutSettings();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JButton jbAccountDebit;
    private javax.swing.JButton jbClose;
    private javax.swing.JButton jbDate;
    private javax.swing.JButton jbOk;
    private javax.swing.JComboBox jcbAccountDebit;
    private javax.swing.JComboBox jcbPkBankLayoutTypeId;
    private javax.swing.JComboBox jcbPkLayoutId;
    private javax.swing.JFormattedTextField jftDate;
    private javax.swing.JLabel jlAccountCurrencyId;
    private javax.swing.JLabel jlAccountDebit;
    private javax.swing.JLabel jlConcept;
    private javax.swing.JLabel jlConsecutiveDay;
    private javax.swing.JLabel jlDate;
    private javax.swing.JLabel jlDescription;
    private javax.swing.JLabel jlPkBankLayoutTypeId;
    private javax.swing.JLabel jlPkLayouId;
    private javax.swing.JTextField jtfAccountCurrencyKey;
    private javax.swing.JTextField jtfConcept;
    private javax.swing.JTextField jtfConsecutiveDay;
    private javax.swing.JTextField jtfDescription;
    // End of variables declaration//GEN-END:variables

    public void resetForm() {
        mbFirstTime = true;
        moFieldDate.setFieldValue(miClient.getSessionXXX().getWorkingDate());
        moDataAccountCash = null;
        moDataBizPartnerBranchBankAccount = null;
        mnFkCurrencyId = 0;
        mnFkLayoutPaymentId = 0;
        mnFkLayoutTypeId = 0;
        mnFkLayoutBankId = 0;
        mnPkLayoutId = 0;
        msAccountDebit = "";
        moFieldConcept.setFieldValue("");
        moFieldDescription.setFieldValue("");
        moFieldConsecutiveDay.setFieldValue(0);

        jcbPkBankLayoutTypeId.setEnabled(false);
        jtfConcept.setEnabled(false);
        jtfDescription.setEnabled(false);

        populateLayoutBank();
        SFormUtilities.populateComboBox(miClient, jcbPkBankLayoutTypeId, SDataConstants.FINU_TP_LAY_BANK);
        SFormUtilities.populateComboBox(miClient, jcbAccountDebit, SDataConstants.FINX_ACC_CASH_BANK, new int[] { miClient.getSessionXXX().getCurrentCompanyBranchId() });
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() instanceof JButton) {
            JButton button = (JButton) e.getSource();

            if (button == jbDate) {
                actionDate();
            }
            else if (button == jbOk) {
                actionOk();
            }
            else if (button == jbClose) {
                actionClose();
            }
            else if (button == jbAccountDebit) {
                actionAccountDebit();
            }
        }
    }
}