/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * STabFilterCompanyBranchEntity.java
 *
 * Created on 25/11/2009, 04:08:53 PM
 */

package erp.table;

import erp.data.SDataConstants;
import erp.data.SDataConstantsSys;
import erp.data.SDataUtilities;
import erp.lib.SLibConstants;
import erp.lib.table.STableSetting;
import erp.mbps.data.SDataBizPartnerBranch;
import erp.mcfg.data.SDataCompanyBranchEntity;
import erp.mbps.form.SDialogFilterCompanyBranchEntity;

/**
 *
 * @author Alfonso Flores, Sergio Flores
 */
public class STabFilterCompanyBranchEntity extends javax.swing.JPanel {

    private erp.client.SClientInterface miClient;
    private erp.lib.table.STableTab moTab;
    private int mnEntityCategoryId;
    private int mnCompanyBranchId;
    private int mnEntityId;
    private erp.lib.table.STableSetting moSetting;
    private erp.mbps.form.SDialogFilterCompanyBranchEntity moDialogFilterCompanyBranchEntity;

    /** Creates new form STabFilterCompanyBranchEntity */
    public STabFilterCompanyBranchEntity(erp.client.SClientInterface client, erp.lib.table.STableTab tableTab, int entityCategoryId) {
        miClient = client;
        moTab = tableTab;
        mnEntityCategoryId = entityCategoryId;

        initComponents();
        initComponentsExtra();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jtfCompanyBranch = new javax.swing.JTextField();
        jtfEntity = new javax.swing.JTextField();
        jbCompanyBranchEntity = new javax.swing.JButton();

        setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 3, 0));

        jtfCompanyBranch.setBackground(java.awt.Color.lightGray);
        jtfCompanyBranch.setEditable(false);
        jtfCompanyBranch.setText("CODE");
        jtfCompanyBranch.setToolTipText("Sucursal de la empresa");
        jtfCompanyBranch.setFocusable(false);
        jtfCompanyBranch.setPreferredSize(new java.awt.Dimension(65, 23));
        add(jtfCompanyBranch);

        jtfEntity.setBackground(java.awt.Color.lightGray);
        jtfEntity.setEditable(false);
        jtfEntity.setText("CODE");
        jtfEntity.setToolTipText("Entidad");
        jtfEntity.setFocusable(false);
        jtfEntity.setPreferredSize(new java.awt.Dimension(65, 23));
        add(jtfEntity);

        jbCompanyBranchEntity.setIcon(new javax.swing.ImageIcon(getClass().getResource("/erp/img/icon_std_filter_bpb.gif"))); // NOI18N
        jbCompanyBranchEntity.setToolTipText("Seleccionar entidad");
        jbCompanyBranchEntity.setPreferredSize(new java.awt.Dimension(23, 23));
        jbCompanyBranchEntity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCompanyBranchEntityActionPerformed(evt);
            }
        });
        add(jbCompanyBranchEntity);
    }// </editor-fold>//GEN-END:initComponents

    private void jbCompanyBranchEntityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCompanyBranchEntityActionPerformed
        actionCompanyBranchEntity();
    }//GEN-LAST:event_jbCompanyBranchEntityActionPerformed

    private void initComponentsExtra() {
        int[] key = null;

        moSetting = new STableSetting(SFilterConstants.SETTING_FILTER_COB_ENT, null);
        moDialogFilterCompanyBranchEntity = new SDialogFilterCompanyBranchEntity(miClient, mnEntityCategoryId);

        switch (mnEntityCategoryId) {
            case SDataConstantsSys.CFGS_CT_ENT_CASH:
                jtfEntity.setToolTipText("Cuenta de efectivo");
                break;
            case SDataConstantsSys.CFGS_CT_ENT_WH:
                jtfEntity.setToolTipText("Almac√©n");
                break;
            case SDataConstantsSys.CFGS_CT_ENT_POS:
                jtfEntity.setToolTipText("Punto de venta");
                break;
            case SDataConstantsSys.CFGS_CT_ENT_PLANT:
                jtfEntity.setToolTipText("Planta");
                break;
            default:
                miClient.showMsgBoxWarning(SLibConstants.MSG_ERR_UTIL_UNKNOWN_OPTION);
        }

        jbCompanyBranchEntity.setToolTipText("Seleccionar " + jtfEntity.getToolTipText().toLowerCase());

        key = miClient.getSessionXXX().getCurrentCompanyBranchEntityKey(mnEntityCategoryId);

        if (key == null) {
            if (miClient.getSessionXXX().getCurrentCompanyBranchId() != SLibConstants.UNDEFINED) {
                key = new int[] { miClient.getSessionXXX().getCurrentCompanyBranchId(), SLibConstants.UNDEFINED };
            }
        }

        updateFilter(key, false);
    }

    private void updateFilter(int[] key, boolean updateSetting) {
        if (key == null) {
            mnCompanyBranchId = SLibConstants.UNDEFINED;
            mnEntityId = SLibConstants.UNDEFINED;
        }
        else {
            mnCompanyBranchId = key[0];
            mnEntityId = key[1];
        }

        renderCompanyBranchEntityText();

        moSetting.setSetting(key);

        if (updateSetting) {
            moTab.updateSetting(moSetting);
        }
        else {
            moTab.addSetting(moSetting);
        }
    }

    private void actionCompanyBranchEntity() {
        moDialogFilterCompanyBranchEntity.formReset();
        moDialogFilterCompanyBranchEntity.formRefreshCatalogues();
        moDialogFilterCompanyBranchEntity.setCompanyBranchEntityKey(new int[] { mnCompanyBranchId, mnEntityId });
        moDialogFilterCompanyBranchEntity.setVisible(true);

        if (moDialogFilterCompanyBranchEntity.getFormResult() == erp.lib.SLibConstants.FORM_RESULT_OK) {
            updateFilter(moDialogFilterCompanyBranchEntity.getCompanyBranchEntityKey(), true);
        }
    }

    private void renderCompanyBranchEntityText() {
        String text = "";

        if (mnCompanyBranchId == SLibConstants.UNDEFINED) {
            text = SLibConstants.TXT_ALL;
        }
        else {
            text = ((SDataBizPartnerBranch) SDataUtilities.readRegistry(
                    miClient, SDataConstants.BPSU_BPB, new int[] { mnCompanyBranchId }, SLibConstants.EXEC_MODE_SILENT)).getCode();
        }

        jtfCompanyBranch.setText(text);
        jtfCompanyBranch.setCaretPosition(0);

        if (mnEntityId == SLibConstants.UNDEFINED) {
            text = SLibConstants.TXT_ALL;
        }
        else {
            text = ((SDataCompanyBranchEntity) SDataUtilities.readRegistry(
                    miClient, SDataConstants.CFGU_COB_ENT, new int[] { mnCompanyBranchId, mnEntityId }, SLibConstants.EXEC_MODE_SILENT)).getCode();
        }

        jtfEntity.setText(text);
        jtfEntity.setCaretPosition(0);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbCompanyBranchEntity;
    private javax.swing.JTextField jtfCompanyBranch;
    private javax.swing.JTextField jtfEntity;
    // End of variables declaration//GEN-END:variables

    public int[] getCompanyBranchEntityKey() {
        return new int[] { mnCompanyBranchId, mnEntityId };
    }
}
