/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SPanelDps.java
 *
 * Created on 7/09/2010, 05:25:26 PM
 */

package erp.mtrn.form;

import erp.data.SDataConstants;
import erp.data.SDataConstantsSys;
import erp.data.SDataReadDescriptions;
import erp.data.SDataUtilities;
import erp.lib.SLibConstants;
import erp.lib.SLibTimeUtilities;
import erp.lib.SLibUtilities;
import erp.mfin.form.SDialogAccountingMoveDpsBizPartner;
import javax.swing.border.TitledBorder;

/**
 *
 * @author Sergio Flores
 */
public class SPanelDps extends javax.swing.JPanel {

    private erp.client.SClientInterface miClient;
    private java.lang.String msTitledBorderComplement;
    private erp.mtrn.data.SDataDps moDps;
    private int mnReferenceYear;
    private java.util.Date mtReferenceDate;
    private double[] madDpsBalance;
    private erp.mfin.form.SDialogAccountingMoveDpsBizPartner moDialogAccountingMoveDpsBizPartner;

    /** Creates new form SPanelDps */
    public SPanelDps(erp.client.SClientInterface client) {
        this(client, "");
    }

    /** Creates new form SPanelDps */
    public SPanelDps(erp.client.SClientInterface client, java.lang.String titledBorderComplement) {
        miClient = client;
        msTitledBorderComplement = titledBorderComplement;

        initComponents();
        initComponentsExtra();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpDps = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jlDpsType = new javax.swing.JLabel();
        jtfDpsType = new javax.swing.JTextField();
        jPanel12 = new javax.swing.JPanel();
        jlCompanyBranch = new javax.swing.JLabel();
        jtfCompanyBranch = new javax.swing.JTextField();
        jtfCompanyBranchCode = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jlBizPartner = new javax.swing.JLabel();
        jtfBizPartner = new javax.swing.JTextField();
        jPanel11 = new javax.swing.JPanel();
        jlDate = new javax.swing.JLabel();
        jtfDate = new javax.swing.JTextField();
        jPanel16 = new javax.swing.JPanel();
        jlNumber = new javax.swing.JLabel();
        jtfNumberSeries = new javax.swing.JTextField();
        jtfNumber = new javax.swing.JTextField();
        jckIsAudited = new javax.swing.JCheckBox();
        jPanel62 = new javax.swing.JPanel();
        jlNumberReference = new javax.swing.JLabel();
        jtfNumberReference = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jlCurrency = new javax.swing.JLabel();
        jtfCurrency = new javax.swing.JTextField();
        jtfExchangeRate = new javax.swing.JTextField();
        jpDpsValue = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jckIsDiscountDocApplying = new javax.swing.JCheckBox();
        jckIsDiscountDocPercentage = new javax.swing.JCheckBox();
        jtfDiscountDocPercentage = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jbViewDps = new javax.swing.JButton();
        jbViewBalanceDocument = new javax.swing.JButton();
        jbViewBalanceBizPartner = new javax.swing.JButton();
        jPanel19 = new javax.swing.JPanel();
        jlSubtotalCy_r = new javax.swing.JLabel();
        jtfSubtotalCy_r = new javax.swing.JTextField();
        jtfSubtotalCy_rCurKey = new javax.swing.JTextField();
        jPanel13 = new javax.swing.JPanel();
        jlTaxChargedCy_r = new javax.swing.JLabel();
        jtfTaxChargedCy_r = new javax.swing.JTextField();
        jtfTaxChargedCy_rCurKey = new javax.swing.JTextField();
        jPanel14 = new javax.swing.JPanel();
        jlTaxRetainedCy_r = new javax.swing.JLabel();
        jtfTaxRetainedCy_r = new javax.swing.JTextField();
        jtfTaxRetainedCy_rCurKey = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jlTotalCy_r = new javax.swing.JLabel();
        jtfTotalCy_r = new javax.swing.JTextField();
        jtfTotalCy_rCurKey = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jlBalanceCy = new javax.swing.JLabel();
        jtfBalanceCy = new javax.swing.JTextField();
        jtfBalanceCyCurKey = new javax.swing.JTextField();
        jtfBalanceCyYear = new javax.swing.JTextField();
        jPanel10 = new javax.swing.JPanel();
        jlBalance = new javax.swing.JLabel();
        jtfBalance = new javax.swing.JTextField();
        jtfBalanceCurKey = new javax.swing.JTextField();
        jtfBalanceYear = new javax.swing.JTextField();

        setLayout(new java.awt.BorderLayout());

        jpDps.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del documento:"));
        jpDps.setLayout(new java.awt.GridLayout(7, 1, 0, 1));

        jPanel6.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 2, 0));

        jlDpsType.setFont(new java.awt.Font("Tahoma", 1, 11));
        jlDpsType.setText("Tipo de documento:");
        jlDpsType.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel6.add(jlDpsType);

        jtfDpsType.setEditable(false);
        jtfDpsType.setFont(new java.awt.Font("Tahoma", 1, 11));
        jtfDpsType.setText("DOCUMENT TYPE");
        jtfDpsType.setFocusable(false);
        jtfDpsType.setPreferredSize(new java.awt.Dimension(250, 23));
        jPanel6.add(jtfDpsType);

        jpDps.add(jPanel6);

        jPanel12.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 2, 0));

        jlCompanyBranch.setText("Sucursal de la empresa:");
        jlCompanyBranch.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel12.add(jlCompanyBranch);

        jtfCompanyBranch.setEditable(false);
        jtfCompanyBranch.setText("COMPANY BRANCH");
        jtfCompanyBranch.setFocusable(false);
        jtfCompanyBranch.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel12.add(jtfCompanyBranch);

        jtfCompanyBranchCode.setEditable(false);
        jtfCompanyBranchCode.setText("CODE");
        jtfCompanyBranchCode.setFocusable(false);
        jtfCompanyBranchCode.setPreferredSize(new java.awt.Dimension(48, 23));
        jPanel12.add(jtfCompanyBranchCode);

        jpDps.add(jPanel12);

        jPanel7.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 2, 0));

        jlBizPartner.setText("Asociado de negocios:");
        jlBizPartner.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel7.add(jlBizPartner);

        jtfBizPartner.setEditable(false);
        jtfBizPartner.setText("BUSINESS PARTNER");
        jtfBizPartner.setFocusable(false);
        jtfBizPartner.setPreferredSize(new java.awt.Dimension(250, 23));
        jPanel7.add(jtfBizPartner);

        jpDps.add(jPanel7);

        jPanel11.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 2, 0));

        jlDate.setText("Fecha:");
        jlDate.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel11.add(jlDate);

        jtfDate.setEditable(false);
        jtfDate.setText("dd/mm/yyyy");
        jtfDate.setFocusable(false);
        jtfDate.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel11.add(jtfDate);

        jpDps.add(jPanel11);

        jPanel16.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 2, 0));

        jlNumber.setText("Serie y folio documento:");
        jlNumber.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel16.add(jlNumber);

        jtfNumberSeries.setEditable(false);
        jtfNumberSeries.setText("000000000");
        jtfNumberSeries.setFocusable(false);
        jtfNumberSeries.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel16.add(jtfNumberSeries);

        jtfNumber.setEditable(false);
        jtfNumber.setText("000000000");
        jtfNumber.setFocusable(false);
        jtfNumber.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel16.add(jtfNumber);

        jckIsAudited.setText("Autorizado");
        jckIsAudited.setEnabled(false);
        jckIsAudited.setPreferredSize(new java.awt.Dimension(95, 23));
        jPanel16.add(jckIsAudited);

        jpDps.add(jPanel16);

        jPanel62.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 2, 0));

        jlNumberReference.setText("Referencia documento:");
        jlNumberReference.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel62.add(jlNumberReference);

        jtfNumberReference.setEditable(false);
        jtfNumberReference.setText("ABC000ABC000");
        jtfNumberReference.setFocusable(false);
        jtfNumberReference.setPreferredSize(new java.awt.Dimension(152, 23));
        jPanel62.add(jtfNumberReference);

        jpDps.add(jPanel62);

        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 2, 0));

        jlCurrency.setText("Moneda y tipo de cambio:");
        jlCurrency.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel2.add(jlCurrency);

        jtfCurrency.setEditable(false);
        jtfCurrency.setText("CURRENCY");
        jtfCurrency.setFocusable(false);
        jtfCurrency.setPreferredSize(new java.awt.Dimension(152, 23));
        jPanel2.add(jtfCurrency);

        jtfExchangeRate.setEditable(false);
        jtfExchangeRate.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jtfExchangeRate.setText("0.0000");
        jtfExchangeRate.setFocusable(false);
        jtfExchangeRate.setPreferredSize(new java.awt.Dimension(95, 23));
        jPanel2.add(jtfExchangeRate);

        jpDps.add(jPanel2);

        add(jpDps, java.awt.BorderLayout.WEST);

        jpDpsValue.setBorder(javax.swing.BorderFactory.createTitledBorder("Valor del documento:"));
        jpDpsValue.setLayout(new java.awt.GridLayout(7, 1, 0, 1));

        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanel8.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 2, 0));

        jckIsDiscountDocApplying.setText("Descuento:");
        jckIsDiscountDocApplying.setEnabled(false);
        jckIsDiscountDocApplying.setPreferredSize(new java.awt.Dimension(80, 23));
        jPanel8.add(jckIsDiscountDocApplying);

        jckIsDiscountDocPercentage.setText("%");
        jckIsDiscountDocPercentage.setEnabled(false);
        jckIsDiscountDocPercentage.setPreferredSize(new java.awt.Dimension(43, 23));
        jPanel8.add(jckIsDiscountDocPercentage);

        jtfDiscountDocPercentage.setEditable(false);
        jtfDiscountDocPercentage.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jtfDiscountDocPercentage.setText("0.00%");
        jtfDiscountDocPercentage.setFocusable(false);
        jtfDiscountDocPercentage.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel8.add(jtfDiscountDocPercentage);

        jPanel3.add(jPanel8, java.awt.BorderLayout.WEST);

        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT, 1, 0));

        jbViewDps.setIcon(new javax.swing.ImageIcon(getClass().getResource("/erp/img/icon_std_look.gif"))); // NOI18N
        jbViewDps.setToolTipText("Ver documento");
        jbViewDps.setFocusable(false);
        jbViewDps.setPreferredSize(new java.awt.Dimension(23, 23));
        jbViewDps.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbViewDpsActionPerformed(evt);
            }
        });
        jPanel4.add(jbViewDps);

        jbViewBalanceDocument.setIcon(new javax.swing.ImageIcon(getClass().getResource("/erp/img/icon_std_query_doc.gif"))); // NOI18N
        jbViewBalanceDocument.setToolTipText("Ver movimientos documento");
        jbViewBalanceDocument.setFocusable(false);
        jbViewBalanceDocument.setPreferredSize(new java.awt.Dimension(23, 23));
        jbViewBalanceDocument.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbViewBalanceDocumentActionPerformed(evt);
            }
        });
        jPanel4.add(jbViewBalanceDocument);

        jbViewBalanceBizPartner.setIcon(new javax.swing.ImageIcon(getClass().getResource("/erp/img/icon_std_query_bp.gif"))); // NOI18N
        jbViewBalanceBizPartner.setToolTipText("Ver movimientos asociado de negocios");
        jbViewBalanceBizPartner.setFocusable(false);
        jbViewBalanceBizPartner.setPreferredSize(new java.awt.Dimension(23, 23));
        jbViewBalanceBizPartner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbViewBalanceBizPartnerActionPerformed(evt);
            }
        });
        jPanel4.add(jbViewBalanceBizPartner);

        jPanel3.add(jPanel4, java.awt.BorderLayout.CENTER);

        jpDpsValue.add(jPanel3);

        jPanel19.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 2, 0));

        jlSubtotalCy_r.setFont(new java.awt.Font("Tahoma", 1, 11));
        jlSubtotalCy_r.setText("Subtotal:");
        jlSubtotalCy_r.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel19.add(jlSubtotalCy_r);

        jtfSubtotalCy_r.setEditable(false);
        jtfSubtotalCy_r.setFont(new java.awt.Font("Tahoma", 1, 11));
        jtfSubtotalCy_r.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jtfSubtotalCy_r.setText("0,000,000,000.00");
        jtfSubtotalCy_r.setFocusable(false);
        jtfSubtotalCy_r.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel19.add(jtfSubtotalCy_r);

        jtfSubtotalCy_rCurKey.setEditable(false);
        jtfSubtotalCy_rCurKey.setFont(new java.awt.Font("Tahoma", 1, 11));
        jtfSubtotalCy_rCurKey.setText("CUR");
        jtfSubtotalCy_rCurKey.setFocusable(false);
        jtfSubtotalCy_rCurKey.setPreferredSize(new java.awt.Dimension(50, 23));
        jPanel19.add(jtfSubtotalCy_rCurKey);

        jpDpsValue.add(jPanel19);

        jPanel13.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 2, 0));

        jlTaxChargedCy_r.setText("Imptos. trasladados:");
        jlTaxChargedCy_r.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel13.add(jlTaxChargedCy_r);

        jtfTaxChargedCy_r.setEditable(false);
        jtfTaxChargedCy_r.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jtfTaxChargedCy_r.setText("0,000,000,000.00");
        jtfTaxChargedCy_r.setFocusable(false);
        jtfTaxChargedCy_r.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel13.add(jtfTaxChargedCy_r);

        jtfTaxChargedCy_rCurKey.setEditable(false);
        jtfTaxChargedCy_rCurKey.setText("CUR");
        jtfTaxChargedCy_rCurKey.setFocusable(false);
        jtfTaxChargedCy_rCurKey.setPreferredSize(new java.awt.Dimension(50, 23));
        jPanel13.add(jtfTaxChargedCy_rCurKey);

        jpDpsValue.add(jPanel13);

        jPanel14.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 2, 0));

        jlTaxRetainedCy_r.setText("Imptos. retenidos (-):");
        jlTaxRetainedCy_r.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel14.add(jlTaxRetainedCy_r);

        jtfTaxRetainedCy_r.setEditable(false);
        jtfTaxRetainedCy_r.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jtfTaxRetainedCy_r.setText("0,000,000,000.00");
        jtfTaxRetainedCy_r.setFocusable(false);
        jtfTaxRetainedCy_r.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel14.add(jtfTaxRetainedCy_r);

        jtfTaxRetainedCy_rCurKey.setEditable(false);
        jtfTaxRetainedCy_rCurKey.setText("CUR");
        jtfTaxRetainedCy_rCurKey.setFocusable(false);
        jtfTaxRetainedCy_rCurKey.setPreferredSize(new java.awt.Dimension(50, 23));
        jPanel14.add(jtfTaxRetainedCy_rCurKey);

        jpDpsValue.add(jPanel14);

        jPanel9.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 2, 0));

        jlTotalCy_r.setFont(new java.awt.Font("Tahoma", 1, 11));
        jlTotalCy_r.setText("Total:");
        jlTotalCy_r.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel9.add(jlTotalCy_r);

        jtfTotalCy_r.setEditable(false);
        jtfTotalCy_r.setFont(new java.awt.Font("Tahoma", 1, 11));
        jtfTotalCy_r.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jtfTotalCy_r.setText("0,000,000,000.00");
        jtfTotalCy_r.setFocusable(false);
        jtfTotalCy_r.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel9.add(jtfTotalCy_r);

        jtfTotalCy_rCurKey.setEditable(false);
        jtfTotalCy_rCurKey.setFont(new java.awt.Font("Tahoma", 1, 11));
        jtfTotalCy_rCurKey.setText("CUR");
        jtfTotalCy_rCurKey.setFocusable(false);
        jtfTotalCy_rCurKey.setPreferredSize(new java.awt.Dimension(50, 23));
        jPanel9.add(jtfTotalCy_rCurKey);

        jpDpsValue.add(jPanel9);

        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 2, 0));

        jlBalanceCy.setText("Saldo actual:");
        jlBalanceCy.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel1.add(jlBalanceCy);

        jtfBalanceCy.setEditable(false);
        jtfBalanceCy.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jtfBalanceCy.setText("0,000,000,000.00");
        jtfBalanceCy.setFocusable(false);
        jtfBalanceCy.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel1.add(jtfBalanceCy);

        jtfBalanceCyCurKey.setEditable(false);
        jtfBalanceCyCurKey.setText("CUR");
        jtfBalanceCyCurKey.setFocusable(false);
        jtfBalanceCyCurKey.setPreferredSize(new java.awt.Dimension(50, 23));
        jPanel1.add(jtfBalanceCyCurKey);

        jtfBalanceCyYear.setEditable(false);
        jtfBalanceCyYear.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtfBalanceCyYear.setText("2000");
        jtfBalanceCyYear.setFocusable(false);
        jtfBalanceCyYear.setPreferredSize(new java.awt.Dimension(40, 23));
        jPanel1.add(jtfBalanceCyYear);

        jpDpsValue.add(jPanel1);

        jPanel10.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 2, 0));

        jlBalance.setText("Saldo actual (ML):");
        jlBalance.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel10.add(jlBalance);

        jtfBalance.setEditable(false);
        jtfBalance.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jtfBalance.setText("0,000,000,000.00");
        jtfBalance.setFocusable(false);
        jtfBalance.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel10.add(jtfBalance);

        jtfBalanceCurKey.setEditable(false);
        jtfBalanceCurKey.setText("CUR");
        jtfBalanceCurKey.setFocusable(false);
        jtfBalanceCurKey.setPreferredSize(new java.awt.Dimension(50, 23));
        jPanel10.add(jtfBalanceCurKey);

        jtfBalanceYear.setEditable(false);
        jtfBalanceYear.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtfBalanceYear.setText("2000");
        jtfBalanceYear.setFocusable(false);
        jtfBalanceYear.setPreferredSize(new java.awt.Dimension(40, 23));
        jPanel10.add(jtfBalanceYear);

        jpDpsValue.add(jPanel10);

        add(jpDpsValue, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void jbViewDpsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbViewDpsActionPerformed
        int gui = moDps.isDocumentPur() ? SDataConstants.MOD_PUR : SDataConstants.MOD_SAL;     // GUI module

        miClient.getGuiModule(gui).setFormComplement(moDps.getDpsTypeKey());
        miClient.getGuiModule(gui).showForm(SDataConstants.TRNX_DPS_RO, moDps.getPrimaryKey());
    }//GEN-LAST:event_jbViewDpsActionPerformed

    private void jbViewBalanceBizPartnerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbViewBalanceBizPartnerActionPerformed
        moDialogAccountingMoveDpsBizPartner.refreshAccountingDetail();
        moDialogAccountingMoveDpsBizPartner.setParamBizPartnerName(SDataReadDescriptions.getCatalogueDescription(miClient, SDataConstants.BPSU_BP, new int[] { moDps.getFkBizPartnerId_r() }));
        moDialogAccountingMoveDpsBizPartner.setParamDpsNumber("");
        moDialogAccountingMoveDpsBizPartner.setParamDpsKey(null);
        moDialogAccountingMoveDpsBizPartner.setParamBizPartnerKey(new int[] { moDps.getFkBizPartnerId_r() });
        moDialogAccountingMoveDpsBizPartner.showAccountingDetail(mnReferenceYear, mtReferenceDate);
    }//GEN-LAST:event_jbViewBalanceBizPartnerActionPerformed

    private void jbViewBalanceDocumentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbViewBalanceDocumentActionPerformed
        moDialogAccountingMoveDpsBizPartner.refreshAccountingDetail();
        moDialogAccountingMoveDpsBizPartner.setParamBizPartnerName(SDataReadDescriptions.getCatalogueDescription(miClient, SDataConstants.BPSU_BP, new int[] { moDps.getFkBizPartnerId_r() }));
        moDialogAccountingMoveDpsBizPartner.setParamDpsNumber(moDps.getNumberSeries() + (moDps.getNumberSeries().length() == 0 ? "" : "-") + moDps.getNumber());
        moDialogAccountingMoveDpsBizPartner.setParamDpsKey(moDps.getPrimaryKey());
        moDialogAccountingMoveDpsBizPartner.setParamBizPartnerKey(null);
        moDialogAccountingMoveDpsBizPartner.showAccountingDetail(mnReferenceYear, mtReferenceDate);
    }//GEN-LAST:event_jbViewBalanceDocumentActionPerformed

    private void initComponentsExtra() {
        setDps(null, null);

        if (msTitledBorderComplement.length() > 0) {
            ((TitledBorder) jpDps.getBorder()).setTitle(SLibUtilities.textTrim("Datos del documento " + msTitledBorderComplement) + ":");
            ((TitledBorder) jpDpsValue.getBorder()).setTitle(SLibUtilities.textTrim("Valor del documento " + msTitledBorderComplement) + ":");
        }
    }

    private void renderDps() {
        if (moDps == null) {
            jtfDpsType.setText("");
            jtfCompanyBranch.setText("");
            jtfCompanyBranchCode.setText("");
            jtfBizPartner.setText("");

            jtfDpsType.setToolTipText(null);
            jtfCompanyBranch.setToolTipText(null);
            jtfCompanyBranchCode.setToolTipText(null);
            jtfBizPartner.setToolTipText(null);

            jtfDate.setText("");
            jtfNumberSeries.setText("");
            jtfNumber.setText("");
            jtfNumberReference.setText("");
            jtfCurrency.setText("");
            jtfExchangeRate.setText("");
            jtfDiscountDocPercentage.setText("");

            jtfSubtotalCy_r.setText("");
            jtfTaxChargedCy_r.setText("");
            jtfTaxRetainedCy_r.setText("");
            jtfTotalCy_r.setText("");

            jtfSubtotalCy_rCurKey.setText("");
            jtfTaxChargedCy_rCurKey.setText("");
            jtfTaxRetainedCy_rCurKey.setText("");
            jtfTotalCy_rCurKey.setText("");

            jckIsAudited.setSelected(false);
            jckIsDiscountDocApplying.setSelected(false);
            jckIsDiscountDocPercentage.setSelected(false);

            jbViewDps.setEnabled(false);

            madDpsBalance = null;

            jlBalanceCy.setEnabled(false);
            jlBalance.setEnabled(false);

            jtfBalanceCy.setText("");
            jtfBalanceCyCurKey.setText("");
            jtfBalanceCyYear.setText("");

            jtfBalance.setText("");
            jtfBalanceCurKey.setText("");
            jtfBalanceYear.setText("");

            jbViewBalanceDocument.setEnabled(false);
            jbViewBalanceBizPartner.setEnabled(false);

            moDialogAccountingMoveDpsBizPartner = null;
        }
        else {
            jtfDpsType.setText(SDataReadDescriptions.getCatalogueDescription(miClient, SDataConstants.TRNU_TP_DPS, new int[] { moDps.getFkDpsCategoryId(), moDps.getFkDpsClassId(), moDps.getFkDpsTypeId() }));
            jtfCompanyBranch.setText(SDataReadDescriptions.getCatalogueDescription(miClient, SDataConstants.BPSU_BPB, new int[] { moDps.getFkCompanyBranchId() }));
            jtfCompanyBranchCode.setText(SDataReadDescriptions.getCatalogueDescription(miClient, SDataConstants.BPSU_BPB, new int[] { moDps.getFkCompanyBranchId() }, SLibConstants.DESCRIPTION_CODE));
            jtfBizPartner.setText(SDataReadDescriptions.getCatalogueDescription(miClient, SDataConstants.BPSU_BP, new int[] { moDps.getFkBizPartnerId_r() }));

            jtfDpsType.setToolTipText(jtfDpsType.getText());
            jtfCompanyBranch.setToolTipText(jtfCompanyBranch.getText());
            jtfCompanyBranchCode.setToolTipText(jtfCompanyBranchCode.getText());
            jtfBizPartner.setToolTipText(jtfBizPartner.getText());

            jtfDpsType.setCaretPosition(0);
            jtfCompanyBranch.setCaretPosition(0);
            jtfCompanyBranchCode.setCaretPosition(0);
            jtfBizPartner.setCaretPosition(0);

            jtfDate.setText(miClient.getSessionXXX().getFormatters().getDateFormat().format(moDps.getDate()));
            jtfNumberSeries.setText(moDps.getNumberSeries());
            jtfNumber.setText(moDps.getNumber());
            jtfNumberReference.setText(moDps.getNumberReference());
            jtfCurrency.setText(SDataReadDescriptions.getCatalogueDescription(miClient, SDataConstants.CFGU_CUR, new int[] { moDps.getFkCurrencyId() }, SLibConstants.DESCRIPTION_NAME));
            jtfExchangeRate.setText(miClient.getSessionXXX().getFormatters().getDecimalsExchangeRateFormat().format(moDps.getExchangeRate()));
            jtfDiscountDocPercentage.setText(miClient.getSessionXXX().getFormatters().getDecimalsPercentageFormat().format(moDps.getDiscountDocPercentage()));

            jtfSubtotalCy_r.setText(miClient.getSessionXXX().getFormatters().getDecimalsValueFormat().format(moDps.getSubtotalCy_r()));
            jtfTaxChargedCy_r.setText(miClient.getSessionXXX().getFormatters().getDecimalsValueFormat().format(moDps.getTaxChargedCy_r()));
            jtfTaxRetainedCy_r.setText(miClient.getSessionXXX().getFormatters().getDecimalsValueFormat().format(moDps.getTaxRetainedCy_r()));
            jtfTotalCy_r.setText(miClient.getSessionXXX().getFormatters().getDecimalsValueFormat().format(moDps.getTotalCy_r()));

            jtfSubtotalCy_rCurKey.setText(SDataReadDescriptions.getCatalogueDescription(miClient, SDataConstants.CFGU_CUR, new int[] { moDps.getFkCurrencyId() }, SLibConstants.DESCRIPTION_CODE));
            jtfTaxChargedCy_rCurKey.setText(jtfSubtotalCy_rCurKey.getText());
            jtfTaxRetainedCy_rCurKey.setText(jtfSubtotalCy_rCurKey.getText());
            jtfTotalCy_rCurKey.setText(jtfSubtotalCy_rCurKey.getText());

            jckIsAudited.setSelected(moDps.getFkDpsAuthorizationStatusId() == SDataConstantsSys.TRNS_ST_DPS_AUTHORN_AUTHORN);
            jckIsDiscountDocApplying.setSelected(moDps.getIsDiscountDocApplying());
            jckIsDiscountDocPercentage.setSelected(moDps.getIsDiscountDocPercentage());

            jbViewDps.setEnabled(true);

            moDialogAccountingMoveDpsBizPartner = new SDialogAccountingMoveDpsBizPartner(miClient, moDps.getFkDpsCategoryId());

            if (!moDps.isDocument()) {
                madDpsBalance = null;

                jlBalanceCy.setEnabled(false);
                jlBalance.setEnabled(false);

                jtfBalanceCy.setText("");
                jtfBalanceCyCurKey.setText("");
                jtfBalanceCyYear.setText("");

                jtfBalance.setText("");
                jtfBalanceCurKey.setText("");
                jtfBalanceYear.setText("");

                jbViewBalanceDocument.setEnabled(false);
                jbViewBalanceBizPartner.setEnabled(false);
            }
            else {
                try {
                    madDpsBalance = SDataUtilities.obtainDpsBalance(miClient, (int[]) moDps.getPrimaryKey(), mnReferenceYear);
                }
                catch (Exception e) {
                    SLibUtilities.renderException(this, e);
                }

                jlBalanceCy.setEnabled(true);
                jlBalance.setEnabled(true);

                jtfBalanceCy.setText(miClient.getSessionXXX().getFormatters().getDecimalsValueFormat().format(madDpsBalance[1]));
                jtfBalanceCyCurKey.setText(jtfSubtotalCy_rCurKey.getText());
                jtfBalanceCyYear.setText("" + mnReferenceYear);

                if (moDps.getFkCurrencyId() == miClient.getSessionXXX().getParamsErp().getFkCurrencyId()) {
                    jtfBalance.setText("");
                    jtfBalanceCurKey.setText("");
                    jtfBalanceYear.setText("");
                }
                else {
                    jtfBalance.setText(miClient.getSessionXXX().getFormatters().getDecimalsValueFormat().format(madDpsBalance[0]));
                    jtfBalanceCurKey.setText(miClient.getSessionXXX().getParamsErp().getDbmsDataCurrency().getKey());
                    jtfBalanceYear.setText("" + mnReferenceYear);
                }

                jbViewBalanceDocument.setEnabled(true);
                jbViewBalanceBizPartner.setEnabled(true);
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel62;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JButton jbViewBalanceBizPartner;
    private javax.swing.JButton jbViewBalanceDocument;
    private javax.swing.JButton jbViewDps;
    private javax.swing.JCheckBox jckIsAudited;
    private javax.swing.JCheckBox jckIsDiscountDocApplying;
    private javax.swing.JCheckBox jckIsDiscountDocPercentage;
    private javax.swing.JLabel jlBalance;
    private javax.swing.JLabel jlBalanceCy;
    private javax.swing.JLabel jlBizPartner;
    private javax.swing.JLabel jlCompanyBranch;
    private javax.swing.JLabel jlCurrency;
    private javax.swing.JLabel jlDate;
    private javax.swing.JLabel jlDpsType;
    private javax.swing.JLabel jlNumber;
    private javax.swing.JLabel jlNumberReference;
    private javax.swing.JLabel jlSubtotalCy_r;
    private javax.swing.JLabel jlTaxChargedCy_r;
    private javax.swing.JLabel jlTaxRetainedCy_r;
    private javax.swing.JLabel jlTotalCy_r;
    private javax.swing.JPanel jpDps;
    private javax.swing.JPanel jpDpsValue;
    private javax.swing.JTextField jtfBalance;
    private javax.swing.JTextField jtfBalanceCurKey;
    private javax.swing.JTextField jtfBalanceCy;
    private javax.swing.JTextField jtfBalanceCyCurKey;
    private javax.swing.JTextField jtfBalanceCyYear;
    private javax.swing.JTextField jtfBalanceYear;
    private javax.swing.JTextField jtfBizPartner;
    private javax.swing.JTextField jtfCompanyBranch;
    private javax.swing.JTextField jtfCompanyBranchCode;
    private javax.swing.JTextField jtfCurrency;
    private javax.swing.JTextField jtfDate;
    private javax.swing.JTextField jtfDiscountDocPercentage;
    private javax.swing.JTextField jtfDpsType;
    private javax.swing.JTextField jtfExchangeRate;
    private javax.swing.JTextField jtfNumber;
    private javax.swing.JTextField jtfNumberReference;
    private javax.swing.JTextField jtfNumberSeries;
    private javax.swing.JTextField jtfSubtotalCy_r;
    private javax.swing.JTextField jtfSubtotalCy_rCurKey;
    private javax.swing.JTextField jtfTaxChargedCy_r;
    private javax.swing.JTextField jtfTaxChargedCy_rCurKey;
    private javax.swing.JTextField jtfTaxRetainedCy_r;
    private javax.swing.JTextField jtfTaxRetainedCy_rCurKey;
    private javax.swing.JTextField jtfTotalCy_r;
    private javax.swing.JTextField jtfTotalCy_rCurKey;
    // End of variables declaration//GEN-END:variables

    public void setDps(erp.mtrn.data.SDataDps dps, java.util.Date referenceDate) {
        moDps = dps;
        mtReferenceDate = referenceDate != null ? referenceDate : SLibTimeUtilities.getEndOfYear(miClient.getSessionXXX().getWorkingDate());
        mnReferenceYear = SLibTimeUtilities.digestYear(mtReferenceDate)[0];
        renderDps();
    }

    public double[] getDpsBalance() {
        return madDpsBalance;
    }
}
