/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package erp.mod.hrs.form;

import erp.mod.SModConsts;
import erp.mod.hrs.db.SDbAdvanceSettlement;
import sa.lib.SLibConsts;
import sa.lib.SLibUtils;
import sa.lib.db.SDbRegistry;
import sa.lib.gui.SGuiClient;
import sa.lib.gui.SGuiConsts;
import sa.lib.gui.SGuiUtils;
import sa.lib.gui.SGuiValidation;
import sa.lib.gui.bean.SBeanForm;

/**
 *
 * @author Juan Barajas
 */
public class SFormAdvanceSettlement extends SBeanForm {

    private SDbAdvanceSettlement moRegistry;

    /**
     * Creates new form SFormAdvanceSettlement
     */
    public SFormAdvanceSettlement(SGuiClient client, String title) {
        setFormSettings(client, SGuiConsts.BEAN_FORM_EDIT, SModConsts.HRS_ADV_SET, SLibConsts.UNDEFINED, title);
        initComponents();
        initComponentsCustom();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jlEmployee = new javax.swing.JLabel();
        moKeyEmployee = new sa.lib.gui.bean.SBeanFieldKey();
        jPanel5 = new javax.swing.JPanel();
        jlDate = new javax.swing.JLabel();
        moDateDate = new sa.lib.gui.bean.SBeanFieldDate();
        jPanel8 = new javax.swing.JPanel();
        jlAmount = new javax.swing.JLabel();
        moDecAmount = new sa.lib.gui.bean.SBeanFieldDecimal();
        jPanel12 = new javax.swing.JPanel();
        jlNotes = new javax.swing.JLabel();
        moTextNotes = new sa.lib.gui.bean.SBeanFieldText();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del registro:"));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel2.setLayout(new java.awt.GridLayout(4, 1, 0, 5));

        jPanel14.setLayout(new java.awt.FlowLayout(0, 5, 0));

        jlEmployee.setForeground(new java.awt.Color(0, 0, 255));
        jlEmployee.setText("Empleado:*");
        jlEmployee.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel14.add(jlEmployee);

        moKeyEmployee.setPreferredSize(new java.awt.Dimension(250, 23));
        jPanel14.add(moKeyEmployee);

        jPanel2.add(jPanel14);

        jPanel5.setLayout(new java.awt.FlowLayout(0, 5, 0));

        jlDate.setText("Fecha:*");
        jlDate.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel5.add(jlDate);
        jPanel5.add(moDateDate);

        jPanel2.add(jPanel5);

        jPanel8.setLayout(new java.awt.FlowLayout(0, 5, 0));

        jlAmount.setText("Monto:*");
        jlAmount.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel8.add(jlAmount);
        jPanel8.add(moDecAmount);

        jPanel2.add(jPanel8);

        jPanel12.setLayout(new java.awt.FlowLayout(0, 5, 0));

        jlNotes.setText("Notas:");
        jlNotes.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel12.add(jlNotes);

        moTextNotes.setText("sBeanFieldText1");
        moTextNotes.setPreferredSize(new java.awt.Dimension(250, 23));
        jPanel12.add(moTextNotes);

        jPanel2.add(jPanel12);

        jPanel1.add(jPanel2, java.awt.BorderLayout.PAGE_START);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JLabel jlAmount;
    private javax.swing.JLabel jlDate;
    private javax.swing.JLabel jlEmployee;
    private javax.swing.JLabel jlNotes;
    private sa.lib.gui.bean.SBeanFieldDate moDateDate;
    private sa.lib.gui.bean.SBeanFieldDecimal moDecAmount;
    private sa.lib.gui.bean.SBeanFieldKey moKeyEmployee;
    private sa.lib.gui.bean.SBeanFieldText moTextNotes;
    // End of variables declaration//GEN-END:variables

    /*
     * Private methods
     */

    private void initComponentsCustom() {
        SGuiUtils.setWindowBounds(this, 400, 250);

        moKeyEmployee.setKeySettings(miClient, SGuiUtils.getLabelName(jlEmployee.getText()), true);
        moDateDate.setDateSettings(miClient, SGuiUtils.getLabelName(jlDate.getText()), true);
        moDecAmount.setDecimalSettings(SGuiUtils.getLabelName(jlAmount.getText()), SGuiConsts.GUI_TYPE_DEC_QTY, true);
        moTextNotes.setTextSettings(SGuiUtils.getLabelName(jlNotes.getText()), 255, 0);

        moFields.addField(moKeyEmployee);
        moFields.addField(moDateDate);
        moFields.addField(moDecAmount);
        moFields.addField(moTextNotes);

        moFields.setFormButton(jbSave);
    }

    /*
     * Public methods
     */

    /*
     * Overriden methods
     */

    @Override
    public void addAllListeners() {
    }

    @Override
    public void removeAllListeners() {
    }

    @Override
    public void reloadCatalogues() {
        miClient.getSession().populateCatalogue(moKeyEmployee, SModConsts.HRSU_EMP, SLibConsts.UNDEFINED, null);
    }

    @Override
    public void setRegistry(SDbRegistry registry) throws Exception {
        int employeeId = SLibConsts.UNDEFINED;

        moRegistry = (SDbAdvanceSettlement) registry;

        mnFormResult = SLibConsts.UNDEFINED;
        mbFirstActivation = true;

        removeAllListeners();
        reloadCatalogues();

        employeeId = moRegistry.getPkEmployeeId();

        if (moRegistry.isRegistryNew()) {
            moRegistry.initPrimaryKey();
            moRegistry.setPkEmployeeId(employeeId);
            moRegistry.setDate(miClient.getSession().getCurrentDate());
            jtfRegistryKey.setText("");
        }
        else {
            jtfRegistryKey.setText(SLibUtils.textKey(moRegistry.getPrimaryKey()));
        }

        moKeyEmployee.setValue(new int[] { moRegistry.getPkEmployeeId() });
        moDateDate.setValue(moRegistry.getDate());
        moDecAmount.setValue(moRegistry.getAmount());
        moTextNotes.setValue(moRegistry.getNotes());

        setFormEditable(true);

        if (moRegistry.isRegistryNew()) {
            moKeyEmployee.setEnabled(true);
        }
        else {
            moKeyEmployee.setEnabled(false);
        }

        addAllListeners();
    }

    @Override
    public SDbRegistry getRegistry() throws Exception {
        SDbAdvanceSettlement registry = moRegistry.clone();

        if (registry.isRegistryNew()) {
            registry.setPkEmployeeId(moKeyEmployee.getValue()[0]);
        }

        registry.setDate(moDateDate.getValue());
        registry.setAmount(moDecAmount.getValue());
        registry.setNotes(moTextNotes.getValue());

        return registry;
    }

    @Override
    public SGuiValidation validateForm() {
        SGuiValidation validation = moFields.validateFields();

        return validation;
    }
}
