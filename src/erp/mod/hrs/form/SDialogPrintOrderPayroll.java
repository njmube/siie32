/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package erp.mod.hrs.form;

import erp.mod.SModConsts;
import sa.gui.util.SUtilConsts;
import sa.lib.SLibConsts;
import sa.lib.db.SDbRegistry;
import sa.lib.gui.SGuiClient;
import sa.lib.gui.SGuiConsts;
import sa.lib.gui.SGuiUtils;
import sa.lib.gui.SGuiValidation;
import sa.lib.gui.bean.SBeanFormDialog;

/**
 *
 * @author Juan Barajas
 */
public class SDialogPrintOrderPayroll extends SBeanFormDialog {

    protected int mnOrderByType;

    /**
     * Creates new form SDialogPrintOrderPayroll
     * @param client
     * @param title
     */

    public SDialogPrintOrderPayroll(SGuiClient client, String title) {
        setFormSettings(client, SGuiConsts.BEAN_FORM_EDIT, SModConsts.HRS_EMP_LOG_HIRE, SLibConsts.UNDEFINED, title);
        initComponents();
        initComponentsCustom();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        moRadGroupOrder = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        moRadOrderByNumber = new sa.lib.gui.bean.SBeanFieldRadio();
        jPanel12 = new javax.swing.JPanel();
        moRadOrderByEmployee = new sa.lib.gui.bean.SBeanFieldRadio();

        setTitle("Ordenamiento para impresión de nóminas");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Ordenamiento por:"));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel2.setLayout(new java.awt.GridLayout(3, 1, 0, 5));

        jPanel11.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        moRadGroupOrder.add(moRadOrderByNumber);
        moRadOrderByNumber.setText("Folio");
        jPanel11.add(moRadOrderByNumber);

        jPanel2.add(jPanel11);

        jPanel12.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        moRadGroupOrder.add(moRadOrderByEmployee);
        moRadOrderByEmployee.setText("Empleado");
        jPanel12.add(moRadOrderByEmployee);

        jPanel2.add(jPanel12);

        jPanel1.add(jPanel2, java.awt.BorderLayout.NORTH);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.ButtonGroup moRadGroupOrder;
    private sa.lib.gui.bean.SBeanFieldRadio moRadOrderByEmployee;
    private sa.lib.gui.bean.SBeanFieldRadio moRadOrderByNumber;
    // End of variables declaration//GEN-END:variables

    private void initComponentsCustom() {
        SGuiUtils.setWindowBounds(this, 480, 300);

        jbSave.setText("Aceptar");
        
        moRadOrderByNumber.setBooleanSettings(SGuiUtils.getLabelName(moRadOrderByNumber.getText()), true);
        moRadOrderByEmployee.setBooleanSettings(SGuiUtils.getLabelName(moRadOrderByEmployee.getText()), false);

        moFields.addField(moRadOrderByEmployee);
        moFields.addField(moRadOrderByNumber);

        moFields.setFormButton(jbSave);
        
        mnOrderByType = SLibConsts.UNDEFINED;
        moRadOrderByNumber.setSelected(true);

        reloadCatalogues();
        addAllListeners();
    }

    @Override
    public void reloadCatalogues() {
    }

    @Override
    public SGuiValidation validateForm() {
        SGuiValidation validation = moFields.validateFields();

        return validation;
    }

    @Override
    public void addAllListeners() {
    }

    @Override
    public void removeAllListeners() {
    }

    @Override
    public void setRegistry(SDbRegistry registry) throws Exception {

    }

    @Override
    public SDbRegistry getRegistry() throws Exception {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void setValue(final int type, final Object value) {
    }

    @Override
    public Object getValue(final int type) {
        if (moRadOrderByNumber.isSelected()) {
            mnOrderByType = SUtilConsts.PER_DOC;
        }
        else if (moRadOrderByEmployee.isSelected()) {
            mnOrderByType = SUtilConsts.PER_BPR;
        }
        
        return mnOrderByType;
    }
}
